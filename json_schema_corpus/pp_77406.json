{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "type": [
    "object"
  ],
  "definitions": {
    "app": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "App",
      "description": "An app represents the program that you would like to deploy and run on iruka",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/app/definitions/id"
            },
            {
              "$ref": "#/definitions/app/definitions/name"
            }
          ]
        },
        "id": {
          "description": "unique identifier of app",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "name": {
          "description": "unique name of app",
          "example": "example",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "web_url": {
          "description": "web URL of app",
          "example": "https://example.irukaapp.com/",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when app was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when app was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new app.",
          "href": "/apps",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/app/definitions/name"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete"
        },
        {
          "description": "Info for existing app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        },
        {
          "description": "List existing apps.",
          "href": "/apps",
          "method": "GET",
          "rel": "instances",
          "title": "List"
        },
        {
          "description": "Update an existing app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/app/definitions/name"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Update"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/app/definitions/id"
        },
        "name": {
          "$ref": "#/definitions/app/definitions/name"
        },
        "web_url": {
          "$ref": "#/definitions/app/definitions/web_url"
        },
        "created_at": {
          "$ref": "#/definitions/app/definitions/created_at"
        },
        "updated_at": {
          "$ref": "#/definitions/app/definitions/updated_at"
        }
      }
    },
    "config-vars": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Config Vars",
      "description": "Config Vars allow you to manage the configuration information provided to an app on iruka.",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "foo": {
          "description": "an example key-value",
          "example": "bar",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "baz": {
          "description": "an example key-value",
          "example": "qux",
          "readOnly": false,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Get config-vars for app.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/config-vars",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        },
        {
          "description": "Update config-vars for app. You can update existing config-vars by setting them again, and remove by setting it to \"\".",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/config-vars",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "FOO": {
                "$ref": "#/definitions/config-vars/definitions/foo"
              },
              "BAZ": {
                "$ref": "#/definitions/config-vars/definitions/baz"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Update"
        }
      ],
      "properties": {
        "FOO": {
          "$ref": "#/definitions/config-vars/definitions/foo"
        },
        "BAZ": {
          "$ref": "#/definitions/config-vars/definitions/baz"
        }
      }
    },
    "container": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Container",
      "description": "Container encapsulate running processes of an app on iruka.",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/container/definitions/id"
            },
            {
              "$ref": "#/definitions/container/definitions/name"
            }
          ]
        },
        "id": {
          "description": "unique identifier of container",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "app_id": {
          "description": "unique identifier of app the container is belong to",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "name": {
          "description": "unique name of container",
          "example": "example.web.1",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "image": {
          "description": "resource URI of the Docker image (including tag) of the container",
          "example": "quay.io/spesnova/example:latest",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "size": {
          "description": "container size (default \u201c1X\u201d)",
          "example": "2X",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "command": {
          "description": "command used to start this process",
          "example": "bundle exec rails server",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "port": {
          "description": "expose port",
          "example": 80,
          "readOnly": false,
          "type": [
            "integer"
          ]
        },
        "type": {
          "description": "type of process (either \"web\", \"worker\", \"timer\", or \"run\")",
          "example": "web",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "desired_state": {
          "description": "desired state of process (either exited or up)",
          "example": "up",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "current state of process (either exited or up)",
          "example": "up",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "machine": {
          "description": "where this container is running",
          "example": "172.17.8.102",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "published_port": {
          "description": "published port",
          "example": 49153,
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "created_at": {
          "description": "when container was created",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "updated_at": {
          "description": "when container was updated",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create and run a new container.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/containers",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "image": {
                "$ref": "#/definitions/container/definitions/image"
              },
              "size": {
                "$ref": "#/definitions/container/definitions/size"
              },
              "command": {
                "$ref": "#/definitions/container/definitions/command"
              },
              "type": {
                "$ref": "#/definitions/container/definitions/type"
              },
              "port": {
                "$ref": "#/definitions/container/definitions/port"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Create"
        },
        {
          "description": "Delete an existing container.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/containers/{(%23%2Fdefinitions%2Fcontainer%2Fdefinitions%2Fidentity)}",
          "method": "DELETE",
          "rel": "destroy",
          "title": "Delete"
        },
        {
          "description": "Info for existing container.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/containers/{(%23%2Fdefinitions%2Fcontainer%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        },
        {
          "description": "List existing containers.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/containers",
          "method": "GET",
          "rel": "instances",
          "title": "List"
        },
        {
          "description": "Update options and restart an existing container.",
          "href": "/apps/{(%23%2Fdefinitions%2Fapp%2Fdefinitions%2Fidentity)}/containers/{(%23%2Fdefinitions%2Fcontainer%2Fdefinitions%2Fidentity)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "image": {
                "$ref": "#/definitions/container/definitions/image"
              },
              "size": {
                "$ref": "#/definitions/container/definitions/size"
              },
              "command": {
                "$ref": "#/definitions/container/definitions/command"
              },
              "type": {
                "$ref": "#/definitions/container/definitions/type"
              },
              "port": {
                "$ref": "#/definitions/container/definitions/port"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Update"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/container/definitions/id"
        },
        "app_id": {
          "$ref": "#/definitions/container/definitions/app_id"
        },
        "name": {
          "$ref": "#/definitions/container/definitions/name"
        },
        "image": {
          "$ref": "#/definitions/container/definitions/image"
        },
        "size": {
          "$ref": "#/definitions/container/definitions/size"
        },
        "command": {
          "$ref": "#/definitions/container/definitions/command"
        },
        "port": {
          "$ref": "#/definitions/container/definitions/port"
        },
        "type": {
          "$ref": "#/definitions/container/definitions/type"
        },
        "desired_state": {
          "$ref": "#/definitions/container/definitions/desired_state"
        },
        "state": {
          "$ref": "#/definitions/container/definitions/state"
        },
        "machine": {
          "$ref": "#/definitions/container/definitions/machine"
        },
        "published_port": {
          "$ref": "#/definitions/container/definitions/published_port"
        },
        "created_at": {
          "$ref": "#/definitions/container/definitions/created_at"
        },
        "updated_at": {
          "$ref": "#/definitions/container/definitions/updated_at"
        }
      }
    },
    "error": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Errors",
      "description": "Failing responses will have an appropriate status and a JSON body containing more details about a particular error.",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/error/definitions/id"
            }
          ]
        },
        "id": {
          "description": "id of error railsed",
          "example": "bad_request",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "message": {
          "description": "end user message of error raised",
          "example": "request invalid, validate usage and try again",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "url": {
          "description": "reference url with more information about the error",
          "example": "https://github.com/spesnova/iruka/blob/master/docs/errors.md",
          "type": [
            "string"
          ]
        }
      },
      "properties": {
        "id": {
          "$ref": "#/definitions/error/definitions/id"
        },
        "message": {
          "$ref": "#/definitions/error/definitions/message"
        },
        "url": {
          "$ref": "#/definitions/error/definitions/url"
        }
      }
    }
  },
  "properties": {
    "app": {
      "$ref": "#/definitions/app"
    },
    "config-vars": {
      "$ref": "#/definitions/config-vars"
    },
    "container": {
      "$ref": "#/definitions/container"
    },
    "error": {
      "$ref": "#/definitions/error"
    }
  },
  "description": "Iruka API v1 Alpha Document",
  "id": "iruka",
  "links": [
    {
      "href": "https://<your-iruka-server>.com/api/v1-alpha",
      "rel": "self"
    }
  ],
  "title": "Iruka API v1 Alpha"
}