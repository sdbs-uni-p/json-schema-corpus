{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/Demand",
  "required": [],
  "title": "Demand",
  "name": "Demand",
  "description": "A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.",
  "type": "object",
  "properties": {
    "acceptedPaymentMethod": {
      "id": "http://schema.org/acceptedPaymentMethod",
      "title": "acceptedPaymentMethod",
      "description": "The payment method(s) accepted by seller for this offer.",
      "type": "object",
      "properties": {
        "acceptedPaymentMethod": {
          "$ref": "PaymentMethod.json#/properties"
        }
      }
    },
    "advanceBookingRequirement": {
      "id": "http://schema.org/advanceBookingRequirement",
      "title": "advanceBookingRequirement",
      "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
      "type": "object",
      "properties": {
        "advanceBookingRequirement": {
          "$ref": "QuantitativeValue.json#/properties"
        }
      }
    },
    "availability": {
      "id": "http://schema.org/availability",
      "title": "availability",
      "description": "The availability of this item\u2014for example In stock, Out of stock, Pre-order, etc.",
      "type": "object",
      "properties": {
        "availability": {
          "$ref": "ItemAvailability.json#/properties"
        }
      }
    },
    "availabilityEnds": {
      "id": "http://schema.org/availabilityEnds",
      "title": "availabilityEnds",
      "description": "The end of the availability of the product or service included in the offer.",
      "type": "string",
      "format": "date-time"
    },
    "availabilityStarts": {
      "id": "http://schema.org/availabilityStarts",
      "title": "availabilityStarts",
      "description": "The beginning of the availability of the product or service included in the offer.",
      "type": "string",
      "format": "date-time"
    },
    "availableAtOrFrom": {
      "id": "http://schema.org/availableAtOrFrom",
      "title": "availableAtOrFrom",
      "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
      "type": "object",
      "properties": {
        "availableAtOrFrom": {
          "$ref": "Place.json#/properties"
        }
      }
    },
    "availableDeliveryMethod": {
      "id": "http://schema.org/availableDeliveryMethod",
      "title": "availableDeliveryMethod",
      "description": "The delivery method(s) available for this offer.",
      "type": "object",
      "properties": {
        "availableDeliveryMethod": {
          "$ref": "DeliveryMethod.json#/properties"
        }
      }
    },
    "businessFunction": {
      "id": "http://schema.org/businessFunction",
      "title": "businessFunction",
      "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
      "type": "object",
      "properties": {
        "businessFunction": {
          "$ref": "BusinessFunction.json#/properties"
        }
      }
    },
    "deliveryLeadTime": {
      "id": "http://schema.org/deliveryLeadTime",
      "title": "deliveryLeadTime",
      "description": "The typical delay between the receipt of the order and the goods leaving the warehouse.",
      "type": "object",
      "properties": {
        "deliveryLeadTime": {
          "$ref": "QuantitativeValue.json#/properties"
        }
      }
    },
    "eligibleCustomerType": {
      "id": "http://schema.org/eligibleCustomerType",
      "title": "eligibleCustomerType",
      "description": "The type(s) of customers for which the given offer is valid.",
      "type": "object",
      "properties": {
        "eligibleCustomerType": {
          "$ref": "BusinessEntityType.json#/properties"
        }
      }
    },
    "eligibleDuration": {
      "id": "http://schema.org/eligibleDuration",
      "title": "eligibleDuration",
      "description": "The duration for which the given offer is valid.",
      "type": "object",
      "properties": {
        "eligibleDuration": {
          "$ref": "QuantitativeValue.json#/properties"
        }
      }
    },
    "eligibleQuantity": {
      "id": "http://schema.org/eligibleQuantity",
      "title": "eligibleQuantity",
      "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
      "type": "object",
      "properties": {
        "eligibleQuantity": {
          "$ref": "QuantitativeValue.json#/properties"
        }
      }
    },
    "eligibleRegion": {
      "id": "http://schema.org/eligibleRegion",
      "title": "eligibleRegion",
      "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.",
      "type": "object",
      "properties": {
        "eligibleRegion": {
          "$ref": "GeoShape.json#/properties"
        }
      }
    },
    "eligibleTransactionVolume": {
      "id": "http://schema.org/eligibleTransactionVolume",
      "title": "eligibleTransactionVolume",
      "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
      "type": "object",
      "properties": {
        "eligibleTransactionVolume": {
          "$ref": "PriceSpecification.json#/properties"
        }
      }
    },
    "gtin13": {
      "id": "http://schema.org/gtin13",
      "title": "gtin13",
      "description": "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See GS1 GTIN Summary for more details.",
      "type": "string"
    },
    "gtin14": {
      "id": "http://schema.org/gtin14",
      "title": "gtin14",
      "description": "The GTIN-14 code of the product, or the product to which the offer refers. See GS1 GTIN Summary for more details.",
      "type": "string"
    },
    "gtin8": {
      "id": "http://schema.org/gtin8",
      "title": "gtin8",
      "description": "The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See GS1 GTIN Summary for more details.",
      "type": "string"
    },
    "includesObject": {
      "id": "http://schema.org/includesObject",
      "title": "includesObject",
      "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
      "type": "object",
      "properties": {
        "includesObject": {
          "$ref": "TypeAndQuantityNode.json#/properties"
        }
      }
    },
    "inventoryLevel": {
      "id": "http://schema.org/inventoryLevel",
      "title": "inventoryLevel",
      "description": "The current approximate inventory level for the item or items.",
      "type": "object",
      "properties": {
        "inventoryLevel": {
          "$ref": "QuantitativeValue.json#/properties"
        }
      }
    },
    "itemCondition": {
      "id": "http://schema.org/itemCondition",
      "title": "itemCondition",
      "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
      "type": "object",
      "properties": {
        "itemCondition": {
          "$ref": "OfferItemCondition.json#/properties"
        }
      }
    },
    "itemOffered": {
      "id": "http://schema.org/itemOffered",
      "title": "itemOffered",
      "description": "The item being offered.",
      "type": "object",
      "properties": {
        "itemOffered": {
          "$ref": "Product.json#/properties"
        }
      }
    },
    "mpn": {
      "id": "http://schema.org/mpn",
      "title": "mpn",
      "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
      "type": "string"
    },
    "priceSpecification": {
      "id": "http://schema.org/priceSpecification",
      "title": "priceSpecification",
      "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
      "type": "object",
      "properties": {
        "priceSpecification": {
          "$ref": "PriceSpecification.json#/properties"
        }
      }
    },
    "seller": {
      "id": "http://schema.org/seller",
      "title": "seller",
      "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider. Supersedes merchant, vendor.",
      "type": "object",
      "properties": {
        "seller": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "serialNumber": {
      "id": "http://schema.org/serialNumber",
      "title": "serialNumber",
      "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
      "type": "string"
    },
    "sku": {
      "id": "http://schema.org/sku",
      "title": "sku",
      "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
      "type": "string"
    },
    "validFrom": {
      "id": "http://schema.org/validFrom",
      "title": "validFrom",
      "description": "The date when the item becomes valid.",
      "type": "string",
      "format": "date-time"
    },
    "validThrough": {
      "id": "http://schema.org/validThrough",
      "title": "validThrough",
      "description": "The end of the validity of offer, price specification, or opening hours data.",
      "type": "string",
      "format": "date-time"
    },
    "warranty": {
      "id": "http://schema.org/warranty",
      "title": "warranty",
      "description": "The warranty promise(s) included in the offer.",
      "type": "object",
      "properties": {
        "warranty": {
          "$ref": "WarrantyPromise.json#/properties"
        }
      }
    },
    "": {
      "title": "",
      "description": "",
      "type": null
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string",
      "format": "uri"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "string",
      "format": "uri"
    },
    "name": {
      "id": "http://schema.org/name",
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string",
      "format": "uri"
    },
    "url": {
      "id": "http://schema.org/url",
      "title": "url",
      "description": "URL of the item.",
      "type": "string",
      "format": "uri"
    }
  }
}