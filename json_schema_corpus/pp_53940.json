{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/AggregateRating",
  "required": [],
  "title": "AggregateRating",
  "name": "AggregateRating",
  "description": "The average rating based on multiple ratings or reviews.",
  "type": "object",
  "properties": {
    "itemReviewed": {
      "id": "http://schema.org/itemReviewed",
      "title": "itemReviewed",
      "description": "The item that is being reviewed/rated.",
      "type": "object",
      "properties": {
        "itemReviewed": {
          "$ref": "Thing.json#/properties"
        }
      }
    },
    "ratingCount": {
      "id": "http://schema.org/ratingCount",
      "title": "ratingCount",
      "description": "The count of total number of ratings.",
      "type": "number"
    },
    "reviewCount": {
      "id": "http://schema.org/reviewCount",
      "title": "reviewCount",
      "description": "The count of total number of reviews.",
      "type": "number"
    },
    "": {
      "title": "",
      "description": "",
      "type": null
    },
    "bestRating": {
      "id": "http://schema.org/bestRating",
      "title": "bestRating",
      "description": "The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.",
      "type": "number"
    },
    "ratingValue": {
      "id": "http://schema.org/ratingValue",
      "title": "ratingValue",
      "description": "The rating for the content.",
      "type": "string"
    },
    "worstRating": {
      "id": "http://schema.org/worstRating",
      "title": "worstRating",
      "description": "The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.",
      "type": "number"
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string",
      "format": "uri"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "string",
      "format": "uri"
    },
    "name": {
      "id": "http://schema.org/name",
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string",
      "format": "uri"
    },
    "url": {
      "id": "http://schema.org/url",
      "title": "url",
      "description": "URL of the item.",
      "type": "string",
      "format": "uri"
    }
  }
}