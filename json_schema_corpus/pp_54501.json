{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/UserPageVisits",
  "required": [],
  "title": "UserPageVisits",
  "name": "UserPageVisits",
  "description": "User interaction: Visit to a web page.",
  "type": "object",
  "properties": {
    "attendee": {
      "id": "http://schema.org/attendee",
      "title": "attendee",
      "description": "A person or organization attending the event. Supersedes attendees.",
      "type": "object",
      "properties": {
        "attendee": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "doorTime": {
      "id": "http://schema.org/doorTime",
      "title": "doorTime",
      "description": "The time admission will commence.",
      "type": "string",
      "format": "date-time"
    },
    "duration": {
      "id": "http://schema.org/duration",
      "title": "duration",
      "description": "The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format.",
      "type": "object",
      "properties": {
        "duration": {
          "$ref": "Duration.json#/properties"
        }
      }
    },
    "endDate": {
      "id": "http://schema.org/endDate",
      "title": "endDate",
      "description": "The end date and time of the item (in ISO 8601 date format).",
      "type": "object",
      "properties": {
        "endDate": {
          "$ref": "Date.json#/properties"
        }
      }
    },
    "eventStatus": {
      "id": "http://schema.org/eventStatus",
      "title": "eventStatus",
      "description": "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
      "type": "object",
      "properties": {
        "eventStatus": {
          "$ref": "EventStatusType.json#/properties"
        }
      }
    },
    "location": {
      "id": "http://schema.org/location",
      "title": "location",
      "description": "The location of the event, organization or action.",
      "type": "object",
      "properties": {
        "location": {
          "$ref": "PostalAddress.json#/properties"
        }
      }
    },
    "offers": {
      "id": "http://schema.org/offers",
      "title": "offers",
      "description": "An offer to provide this item\u2014for example, an offer to sell a product, rent the DVD of a movie, or give away tickets to an event.",
      "type": "object",
      "properties": {
        "offers": {
          "$ref": "Offer.json#/properties"
        }
      }
    },
    "organizer": {
      "id": "http://schema.org/organizer",
      "title": "organizer",
      "description": "An organizer of an Event.",
      "type": "object",
      "properties": {
        "organizer": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "performer": {
      "id": "http://schema.org/performer",
      "title": "performer",
      "description": "A performer at the event\u2014for example, a presenter, musician, musical group or actor. Supersedes performers.",
      "type": "object",
      "properties": {
        "performer": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "previousStartDate": {
      "id": "http://schema.org/previousStartDate",
      "title": "previousStartDate",
      "description": "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
      "type": "object",
      "properties": {
        "previousStartDate": {
          "$ref": "Date.json#/properties"
        }
      }
    },
    "recordedIn": {
      "id": "http://schema.org/recordedIn",
      "title": "recordedIn",
      "description": "The CreativeWork that captured all or part of this Event. Inverse property: recordedAt.",
      "type": "object",
      "properties": {
        "recordedIn": {
          "$ref": "CreativeWork.json#/properties"
        }
      }
    },
    "startDate": {
      "id": "http://schema.org/startDate",
      "title": "startDate",
      "description": "The start date and time of the item (in ISO 8601 date format).",
      "type": "object",
      "properties": {
        "startDate": {
          "$ref": "Date.json#/properties"
        }
      }
    },
    "subEvent": {
      "id": "http://schema.org/subEvent",
      "title": "subEvent",
      "description": "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference. Supersedes subEvents.",
      "type": "object",
      "properties": {
        "subEvent": {
          "$ref": "Event.json#/properties"
        }
      }
    },
    "superEvent": {
      "id": "http://schema.org/superEvent",
      "title": "superEvent",
      "description": "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.",
      "type": "object",
      "properties": {
        "superEvent": {
          "$ref": "Event.json#/properties"
        }
      }
    },
    "typicalAgeRange": {
      "id": "http://schema.org/typicalAgeRange",
      "title": "typicalAgeRange",
      "description": "The typical expected age range, e.g. '7-9', '11-'.",
      "type": "string"
    },
    "workPerformed": {
      "id": "http://schema.org/workPerformed",
      "title": "workPerformed",
      "description": "A work performed in some event, for example a play performed in a TheaterEvent.",
      "type": "object",
      "properties": {
        "workPerformed": {
          "$ref": "CreativeWork.json#/properties"
        }
      }
    },
    "": {
      "title": "",
      "description": "",
      "type": null
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string",
      "format": "uri"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "string",
      "format": "uri"
    },
    "name": {
      "id": "http://schema.org/name",
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string",
      "format": "uri"
    },
    "url": {
      "id": "http://schema.org/url",
      "title": "url",
      "description": "URL of the item.",
      "type": "string",
      "format": "uri"
    }
  }
}