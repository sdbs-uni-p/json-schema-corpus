{
  "id": "",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Schema for matrix diagram chart configurations.",
  "type": "object",
  "definitions": {
    "positiveInteger": {
      "type": "integer",
      "minimum": 0
    },
    "stringArray": {
      "description": "an array of strings",
      "type": "array",
      "items": {
        "type": "string"
      },
      "minItems": 0
    },
    "positiveIntegerArray": {
      "description": "an array of positive integers",
      "type": "array",
      "items": {
        "$ref": "#/definitions/positiveInteger"
      },
      "minItems": 0
    },
    "rowArray": {
      "description": "an array of rows",
      "type": "array",
      "items": {
        "type": "array"
      },
      "minItems": 1
    },
    "transformArray": {
      "description": "an array of data transforms",
      "type": "array",
      "items": {
        "$ref": "#/definitions/transform"
      },
      "minItems": 0
    },
    "transform": {
      "description": "schema for data transformations",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "dataItem": {
      "description": "a data array item specifying how to access chart data",
      "oneOf": [
        {
          "$ref": "#/definitions/dataInline"
        },
        {
          "$ref": "#/definitions/dataURL"
        },
        {
          "$ref": "#/definitions/dataSource"
        }
      ]
    },
    "dataInline": {
      "description": "a data item which includes the raw chart data directly in the chart specification",
      "type": "object",
      "properties": {
        "name": {
          "description": "unique data name",
          "type": "string"
        },
        "description": {
          "description": "description of the data",
          "type": "string"
        },
        "rownames": {
          "description": "a list of row names",
          "$ref": "#/definitions/stringArray"
        },
        "colnames": {
          "description": "a list of column names",
          "$ref": "#/definitions/stringArray"
        },
        "values": {
          "description": "an array of rows containing column values",
          "$ref": "#/definitions/rowArray"
        },
        "transforms": {
          "description": "a list of transformations to apply to the data",
          "$ref": "#/definitions/transformArray"
        }
      },
      "required": [
        "name",
        "rownames",
        "colnames",
        "values"
      ]
    },
    "dataURL": {
      "description": "a data item which specifies how to access a remote chart data",
      "type": "object",
      "properties": {
        "name": {
          "description": "unique data name",
          "type": "string"
        },
        "description": {
          "description": "description of the data",
          "type": "string"
        },
        "url": {
          "description": "a URL specifying where to access",
          "type": "string",
          "format": "uri"
        },
        "format": {
          "description": "loaded data formatting",
          "$ref": "#/definitions/dataFormat"
        },
        "transforms": {
          "description": "list of transformations to apply to the data",
          "$ref": "#/definitions/transformArray"
        }
      },
      "required": [
        "name",
        "url"
      ]
    },
    "dataSource": {
      "description": "a data item which references another named data item in the chart specification",
      "type": "object",
      "properties": {
        "name": {
          "description": "unique data name",
          "type": "string"
        },
        "description": {
          "description": "description of the data",
          "type": "string"
        },
        "source": {
          "description": "referenced data item name",
          "type": "string"
        },
        "transforms": {
          "description": "list of transformations to apply to the data",
          "$ref": "#/definitions/transformArray"
        }
      },
      "required": [
        "name",
        "source"
      ]
    },
    "dataFormat": {
      "description": "schema for describing a loaded data format",
      "type": "object",
      "properties": {
        "type": {
          "description": "specifies the format of the loaded data (needed for proper parsing)",
          "type": "string",
          "enum": [
            "json",
            "csv",
            "tsv"
          ]
        },
        "fields": {
          "description": "for JSON data, maps a JSON path to canonical data fields (if not provided, will assume that the JSON path directly corresponds to the canonical fields)",
          "type": "object",
          "properties": {
            "rownames": {
              "type": "string"
            },
            "colnames": {
              "type": "string"
            },
            "values": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "layoutNullable": {
      "description": "layout settings set to null should be computed by the chart generator",
      "oneOf": [
        {
          "$ref": "#/definitions/positiveInteger"
        },
        {
          "type": "null"
        }
      ]
    },
    "nullOrNumber": {
      "type": [
        "null",
        "number"
      ]
    },
    "xScale": {
      "description": "schema which specifies how to map column data to pixel values",
      "type": "object",
      "properties": {
        "type": {
          "description": "specifies the scale type (ordinal)",
          "enum": [
            "ordinal"
          ]
        },
        "description": {
          "description": "scale description",
          "type": "string"
        },
        "domain": {
          "description": "list of column indices defining the column order",
          "$ref": "#/definitions/positiveIntegerArray"
        },
        "range": {
          "description": "pixel range to which columns are mapped (the full width)",
          "enum": [
            "width"
          ]
        }
      },
      "required": [
        "type",
        "domain",
        "range"
      ]
    },
    "yScale": {
      "description": "schema which specifies how to map rows to pixel values",
      "type": "object",
      "properties": {
        "type": {
          "description": "specifies the scale type (ordinal)",
          "enum": [
            "ordinal"
          ]
        },
        "description": {
          "description": "scale description",
          "type": "string"
        },
        "domain": {
          "description": "list of row indices defining the row order",
          "$ref": "#/definitions/positiveIntegerArray"
        },
        "range": {
          "description": "pixel range to which rows are mapped (the full height)",
          "enum": [
            "height"
          ]
        }
      },
      "required": [
        "type",
        "domain",
        "range"
      ]
    },
    "zScale": {
      "description": "schema which specifies how to map data values to fill opacities",
      "type": "object",
      "properties": {
        "type": {
          "description": "specifies the scale type (linear)",
          "enum": [
            "linear"
          ]
        },
        "description": {
          "description": "scale description",
          "type": "string"
        },
        "domain": {
          "description": "specifies the scale domain (min and max values)",
          "type": "object",
          "properties": {
            "min": {
              "description": "minimum data value limit; if `null`, automatically calculated from data values",
              "$ref": "#/definitions/nullOrNumber"
            },
            "max": {
              "description": "maximum data value limit; if `null`, automatically calculated from data values",
              "$ref": "#/definitions/nullOrNumber"
            }
          },
          "required": [
            "min",
            "max"
          ]
        },
        "range": {
          "description": "specifies the range of allowed fill opacity values",
          "type": "object",
          "properties": {
            "min": {
              "description": "minimum fill opacity",
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "max": {
              "description": "maximum fill opacity",
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          },
          "required": [
            "min",
            "max"
          ]
        }
      },
      "required": [
        "type",
        "domain",
        "range"
      ]
    },
    "colorScale": {
      "description": "specifies how to map data values to colors",
      "type": "object",
      "properties": {
        "type": {
          "description": "specifies the scale type (ordinal)",
          "enum": [
            "ordinal"
          ]
        },
        "description": {
          "description": "scale description",
          "type": "string"
        },
        "domain": {
          "description": "specifies the scale domain",
          "type": "array"
        },
        "range": {
          "description": "list of possible colors to which data values may be mapped",
          "$ref": "#/definitions/stringArray"
        }
      },
      "required": [
        "type",
        "domain",
        "range"
      ]
    },
    "axis": {
      "description": "chart axis schema",
      "type": "object",
      "properties": {
        "scale": {
          "description": "name of corresponding scale",
          "type": "string"
        },
        "label": {
          "description": "axis label",
          "type": "string"
        }
      },
      "required": [
        "scale",
        "label"
      ]
    },
    "associatedData": {
      "description": "associated data source",
      "type": "object",
      "properties": {
        "name": {
          "description": "unique data name which references the associated data source",
          "type": "string"
        },
        "transforms": {
          "description": "list of data transformations to apply to the data",
          "$ref": "#/definitions/transformArray"
        }
      },
      "required": [
        "name"
      ]
    },
    "mark": {
      "description": "visual encoding associated with chart data",
      "oneOf": [
        {
          "$ref": "#/definitions/rect"
        }
      ]
    },
    "rect": {
      "description": "rectangle visual encoding",
      "type": "object",
      "properties": {
        "name": {
          "description": "unique mark name",
          "type": "string"
        },
        "type": {
          "description": "mark type (rect)",
          "enum": [
            "rect"
          ]
        },
        "description": {
          "description": "mark description",
          "type": "string"
        },
        "data": {
          "description": "specifies the data associated with the visual encoding",
          "$ref": "#/definitions/associatedData"
        },
        "properties": {
          "description": "specifies associated rectangle properties",
          "type": "object",
          "properties": {
            "fill": {
              "description": "rectangle fill color",
              "type": "object",
              "properties": {
                "scale": {
                  "description": "associated scale (color)",
                  "enum": [
                    "color"
                  ]
                },
                "field": {
                  "description": "specifies the datum field to map to a fill color",
                  "type": [
                    "string",
                    "number",
                    "null"
                  ]
                }
              },
              "required": [
                "scale",
                "field"
              ]
            },
            "fillOpacity": {
              "description": "rectangle fill-opacity",
              "type": "object",
              "properties": {
                "scale": {
                  "description": "associated scale (z)",
                  "enum": [
                    "z"
                  ]
                },
                "field": {
                  "description": "specifies the datum field to map to a fill-opacity",
                  "type": [
                    "string",
                    "number",
                    "null"
                  ]
                }
              },
              "required": [
                "scale",
                "field"
              ]
            }
          },
          "required": [
            "fill",
            "fillOpacity"
          ]
        }
      },
      "required": [
        "type",
        "data",
        "properties"
      ]
    },
    "brush": {
      "description": "schema for a chart brush",
      "type": "object",
      "properties": {
        "description": {
          "description": "brush description",
          "type": "string"
        },
        "data": {
          "description": "brush data",
          "$ref": "#/definitions/associatedData"
        }
      },
      "required": [
        "data"
      ]
    }
  },
  "properties": {
    "name": {
      "description": "unique chart specification name",
      "type": "string"
    },
    "type": {
      "description": "chart specification type (matrix-diagram)",
      "enum": [
        "matrix-diagram"
      ]
    },
    "meta": {
      "description": "associated chart meta data which aids in the contextual understanding of the chart",
      "type": "object",
      "properties": {
        "title": {
          "description": "chart title",
          "type": "string"
        },
        "description": {
          "description": "chart description",
          "type": "string"
        }
      }
    },
    "data": {
      "description": "list of chart data sources",
      "type": "array",
      "items": {
        "description": "data source",
        "$ref": "#/definitions/dataItem"
      },
      "minItems": 1
    },
    "canvas": {
      "description": "schema for chart layout settings",
      "type": "object",
      "properties": {
        "width": {
          "description": "chart width; if `null`, should be calculated by chart generator based on parent dimensions",
          "$ref": "#/definitions/layoutNullable"
        },
        "height": {
          "description": "chart height; if `null`, should be calculated by chart generator based on parent dimensions",
          "$ref": "#/definitions/layoutNullable"
        },
        "padding": {
          "description": "chart padding; i.e., the distance between the canvas edge and graphical elements",
          "type": "object",
          "properties": {
            "left": {
              "description": "left padding; if `null`, should be determined by chart generator based on row name length, existence of a y-label, et cetera",
              "$ref": "#/definitions/layoutNullable"
            },
            "right": {
              "description": "right padding; if `null`, should be determined by chart generator",
              "$ref": "#/definitions/layoutNullable"
            },
            "top": {
              "description": "top padding; if `null`, should be determined by chart generator based on column name length, existence of an x-label, et cetera",
              "$ref": "#/definitions/layoutNullable"
            },
            "bottom": {
              "description": "bottom padding; if `null`, should be determined by chart generator based on existence of legend entries and other chart elements",
              "$ref": "#/definitions/layoutNullable"
            }
          },
          "required": [
            "left",
            "right",
            "top",
            "bottom"
          ]
        }
      },
      "required": [
        "width",
        "height",
        "padding"
      ]
    },
    "scales": {
      "description": "schema for chart scales",
      "type": "object",
      "properties": {
        "x": {
          "description": "scale mapping columns to pixel values",
          "$ref": "#/definitions/xScale"
        },
        "y": {
          "description": "scale mapping rows to pixel values",
          "$ref": "#/definitions/yScale"
        },
        "z": {
          "description": "scale mapping data values to fill opacities",
          "$ref": "#/definitions/zScale"
        },
        "color": {
          "description": "scale mapping data values to fill colors",
          "$ref": "#/definitions/colorScale"
        }
      },
      "required": [
        "x",
        "y",
        "z",
        "color"
      ]
    },
    "axes": {
      "description": "schema for chart axes",
      "type": "object",
      "properties": {
        "x": {
          "description": "x-axis",
          "$ref": "#/definitions/axis"
        },
        "y": {
          "description": "y-axis",
          "$ref": "#/definitions/axis"
        }
      },
      "required": [
        "x",
        "y"
      ]
    },
    "marks": {
      "description": "schema for visual encodings associated with chart data",
      "type": "array",
      "items": {
        "$ref": "#/definitions/mark"
      },
      "minItems": 1
    },
    "legend": {
      "description": "schema for legend entries",
      "type": "object",
      "properties": {
        "fill": {
          "description": "legend entry for fill color",
          "type": "object",
          "properties": {
            "label": {
              "description": "entry label",
              "type": "string"
            }
          },
          "required": [
            "label"
          ]
        },
        "fillOpacity": {
          "description": "legend entry for fill opacity",
          "type": "object",
          "properties": {
            "label": {
              "description": "entry label",
              "type": "string"
            }
          },
          "required": [
            "label"
          ]
        }
      },
      "required": [
        "fill",
        "fillOpacity"
      ]
    },
    "brushes": {
      "description": "schema for chart brushes",
      "type": "object",
      "properties": {
        "x": {
          "description": "x-axis brush",
          "$ref": "#/definitions/brush"
        },
        "y": {
          "description": "y-axis brush",
          "$ref": "#/definitions/brush"
        }
      }
    },
    "settings": {
      "description": "schema for chart generator settings",
      "type": "object",
      "properties": {
        "autoResize": {
          "description": "specifies if a chart should automatically resize whenever the window resizes",
          "type": "boolean"
        },
        "autoUpdate": {
          "description": "specifies if a chart should update whenever a chart setting changes",
          "type": "boolean"
        },
        "transitions": {
          "description": "schema for transition settings",
          "type": "object",
          "properties": {
            "duration": {
              "description": "transition duration in milliseconds",
              "type": "number"
            }
          }
        },
        "interactions": {
          "description": "schema for interaction settings",
          "type": "object",
          "properties": {
            "brushable": {
              "description": "specifies if a chart should be brushable",
              "type": "boolean"
            },
            "brushableRows": {
              "description": "specifies if a chart should have a brushable y-axis",
              "type": "boolean"
            },
            "brushableCols": {
              "description": "specifies if a chart should have a brushable x-axis",
              "type": "boolean"
            },
            "sortableRows": {
              "description": "specifies if a chart should have sortable rows",
              "type": "boolean"
            },
            "sortableCols": {
              "description": "specifies if a chart should have sortable columns",
              "type": "boolean"
            },
            "resizable": {
              "description": "specifies if a chart can be resized manually",
              "type": "boolean"
            }
          }
        }
      }
    }
  },
  "required": [
    "name",
    "type",
    "meta",
    "data",
    "canvas",
    "scales",
    "axes",
    "marks",
    "legend"
  ]
}