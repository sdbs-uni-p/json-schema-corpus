{
  "gear": {
    "name": "hcp-struct",
    "label": "HCP Structural Pipeline",
    "description": "Run HCP structural pipeline: PreFreeSurfer, FreeSurfer, PostFreeSurfer, and generate QC images",
    "version": "0.1.2",
    "author": "Human Connectome Project",
    "maintainer": "Flywheel <support@flywheel.io>",
    "license": "Apache-2.0",
    "url": "https://github.com/Washington-University/Pipelines",
    "source": "https://github.com/flywheel-apps/hcp-struct",
    "custom": {
      "docker-image": "flywheel/hcp-struct:v0.1.2"
    },
    "config": {
      "Subject": {
        "type": "string",
        "default": "000000",
        "description": "Subject ID"
      },
      "BrainSize": {
        "type": "integer",
        "default": 150,
        "description": "Brain size in mm (in Superior-Inferior axis), typically 150 for adults"
      },
      "TemplateSize": {
        "type": "string",
        "default": "0.8mm",
        "description": "Voxel size of HCP anatomical template. Best if matches input. Options = 0.7mm, 0.8mm, 1mm"
      },
      "StructuralUnwarpDirection": {
        "description": "Readout direction for structural scans ( 'x', 'x-', 'y', 'y-', 'z', 'z-' ). HCP default = 'z'",
        "default": "z",
        "type": "string"
      }
    },
    "inputs": {
      "T1": {
        "description": "T1-weighted anatomical scan",
        "base": "file",
        "type": {
          "enum": [
            "nifti"
          ]
        }
      },
      "T2": {
        "description": "T2-weighted anatomical scan",
        "base": "file",
        "type": {
          "enum": [
            "nifti"
          ]
        }
      },
      "GradientCoeff": {
        "description": "Scanner gradient nonlinearity coefficient file",
        "base": "file",
        "optional": true
      },
      "SpinEchoPositive": {
        "description": "Spin echo field map for correcting T1w and T2w (Positive phase-encode, ie: R>>L or P>>A)",
        "base": "file",
        "type": {
          "enum": [
            "nifti"
          ]
        },
        "optional": true
      },
      "SpinEchoNegative": {
        "description": "Spin echo field map for correcting T1w and T2w (Negative phase-encode, ie: L>>R or A>>P)",
        "base": "file",
        "type": {
          "enum": [
            "nifti"
          ]
        },
        "optional": true
      },
      "SiemensGREMagnitude": {
        "description": "B0 GRE field map magnitude from a Siemens scanner (Must also provide SiemensGREPhase)",
        "base": "file",
        "type": {
          "enum": [
            "nifti"
          ]
        },
        "optional": true
      },
      "SiemensGREPhase": {
        "description": "B0 GRE field map phase from a Siemens scanner (Must also provide SiemensGREMagnitude)",
        "base": "file",
        "type": {
          "enum": [
            "nifti"
          ]
        },
        "optional": true
      },
      "FreeSurferLicense": {
        "description": "FreeSurfer license.txt file (found in $FREESURFER_HOME/license.txt)",
        "base": "file",
        "optional": false
      }
    }
  },
  "exchange": {
    "git-commit": "e5bda288dae7ae21f1e49df20fadbaeb06ceb6bf",
    "rootfs-hash": "sha384:30f4e1ce2fb429cbf4d422dd2a64b1d586b46e70e4cf2dac6223aeac96eb76f51bd8f764834abef380817b18235a4435",
    "rootfs-url": "https://storage.googleapis.com/flywheel-exchange/flywheel-hcp-struct-sha384-30f4e1ce2fb429cbf4d422dd2a64b1d586b46e70e4cf2dac6223aeac96eb76f51bd8f764834abef380817b18235a4435.tgz"
  },
  "invocation-schema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "required": [
      "config",
      "inputs"
    ],
    "type": "object",
    "properties": {
      "inputs": {
        "required": [
          "T2",
          "T1",
          "FreeSurferLicense"
        ],
        "type": "object",
        "properties": {
          "GradientCoeff": {
            "type": "object",
            "properties": {}
          },
          "SpinEchoNegative": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti"
                ]
              }
            }
          },
          "T2": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti"
                ]
              }
            }
          },
          "T1": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti"
                ]
              }
            }
          },
          "SiemensGREPhase": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti"
                ]
              }
            }
          },
          "FreeSurferLicense": {
            "type": "object",
            "properties": {}
          },
          "SiemensGREMagnitude": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti"
                ]
              }
            }
          },
          "SpinEchoPositive": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "nifti"
                ]
              }
            }
          }
        }
      },
      "config": {
        "required": [
          "StructuralUnwarpDirection",
          "TemplateSize",
          "BrainSize",
          "Subject"
        ],
        "type": "object",
        "properties": {
          "StructuralUnwarpDirection": {
            "default": "z",
            "type": "string"
          },
          "TemplateSize": {
            "default": "0.8mm",
            "type": "string"
          },
          "BrainSize": {
            "default": 150,
            "type": "integer"
          },
          "Subject": {
            "default": "000000",
            "type": "string"
          }
        }
      }
    },
    "title": "Invocation manifest for HCP Structural Pipeline"
  }
}