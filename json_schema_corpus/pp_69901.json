{
  "$schema": "http://interagent.github.io/interagent-hyper-schema",
  "type": [
    "object"
  ],
  "definitions": {
    "artifact": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Artifact",
      "description": "An artifact is the result of a successful build. It represents a built Docker image and will tell what what you need to pull to obtain the image.",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "id": {
          "description": "unique identifier of artifact",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "image": {
          "description": "the name of the Docker image. This can be pulled with `docker pull`",
          "readOnly": true,
          "example": "remind101/acme-inc:139759bd61e98faeec619c45b1060b4288952164",
          "type": [
            "string"
          ]
        },
        "build_identy": {
          "$ref": "#/definitions/build/definitions/identity"
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/artifact/definitions/id"
            },
            {
              "$ref": "#/definitions/artifact/definitions/build_identity"
            }
          ]
        }
      },
      "links": [
        {
          "description": "",
          "href": "/artifacts/{(%23%2Fdefinitions%2Fartifact%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/artifact/definitions/id"
        },
        "image": {
          "$ref": "#/definitions/artifact/definitions/image"
        },
        "build": {
          "type": [
            "object"
          ],
          "properties": {
            "id": {
              "$ref": "#/definitions/build/definitions/id"
            }
          }
        }
      }
    },
    "build": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Build",
      "description": "A build represents a request to build a git commit for a repo.",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "id": {
          "description": "unique identifier of build",
          "readOnly": true,
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "repo_sha": {
          "description": "a compact identifier for an artifact the describes the repository and sha together",
          "readOnly": true,
          "example": "remind101/acme-inc@139759bd61e98faeec619c45b1060b4288952164",
          "type": [
            "string"
          ]
        },
        "identity": {
          "anyOf": [
            {
              "$ref": "#/definitions/build/definitions/id"
            },
            {
              "$ref": "#/definitions/build/definitions/repo_sha"
            }
          ]
        },
        "repository": {
          "description": "the GitHub repository that this build is for",
          "example": "remind101/acme-inc",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "branch": {
          "description": "the branch within the GitHub repository that the build was triggered from",
          "readOnly": true,
          "example": "master",
          "type": [
            "string"
          ]
        },
        "sha": {
          "description": "the git commit to build",
          "readOnly": true,
          "example": "139759bd61e98faeec619c45b1060b4288952164",
          "type": [
            "string"
          ]
        },
        "state": {
          "description": "the current state of the build",
          "readOnly": true,
          "example": "building",
          "enum": [
            "pending",
            "building",
            "succeeded",
            "failed"
          ],
          "type": [
            "string"
          ]
        },
        "created_at": {
          "description": "when the build was created",
          "readOnly": true,
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "started_at": {
          "description": "when the build moved to the `\"building\"` state",
          "readOnly": true,
          "format": "date-time",
          "type": [
            "null",
            "string"
          ]
        },
        "completed_at": {
          "description": "when the build moved to the `\"succeeded\"` or `\"failed\"` state",
          "readOnly": true,
          "example": null,
          "format": "date-time",
          "type": [
            "null",
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new build and start it. Note that you cannot start a new build for a sha that is already in a \"pending\" or \"building\" state. You should cancel the existing build first, or wait for it to complete. You must specify either a `branch` OR a `sha`. If you provide a `branch` but no `sha`, Conveyor will use the GitHub API to resolve the HEAD commit on that branch to a sha. If you provide a `sha` but no `branch`, branch caching will be disabled.",
          "href": "/builds",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "repository": {
                "$ref": "#/definitions/build/definitions/repository"
              },
              "branch": {
                "$ref": "#/definitions/build/definitions/branch"
              },
              "sha": {
                "$ref": "#/definitions/build/definitions/sha"
              }
            },
            "type": [
              "object"
            ],
            "required": [
              "repository"
            ]
          },
          "title": "Create"
        },
        {
          "description": "Info for existing build.",
          "href": "/builds/{(%23%2Fdefinitions%2Fbuild%2Fdefinitions%2Fidentity)}",
          "method": "GET",
          "rel": "self",
          "title": "Info"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/build/definitions/id"
        },
        "repository": {
          "$ref": "#/definitions/build/definitions/repository"
        },
        "branch": {
          "$ref": "#/definitions/build/definitions/branch"
        },
        "sha": {
          "$ref": "#/definitions/build/definitions/sha"
        },
        "state": {
          "$ref": "#/definitions/build/definitions/state"
        },
        "created_at": {
          "$ref": "#/definitions/build/definitions/created_at"
        },
        "started_at": {
          "$ref": "#/definitions/build/definitions/started_at"
        },
        "completed_at": {
          "$ref": "#/definitions/build/definitions/completed_at"
        }
      }
    },
    "error": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Error",
      "description": "Defines the format that errors are returned in",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "id": {
          "description": "unique identifier of error",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "message": {
          "description": "human readable message",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "identity": {
          "$ref": "#/definitions/error/definitions/id"
        }
      },
      "properties": {
        "id": {
          "$ref": "#/definitions/error/definitions/id"
        },
        "message": {
          "$ref": "#/definitions/error/definitions/message"
        }
      }
    }
  },
  "properties": {
    "artifact": {
      "$ref": "#/definitions/artifact"
    },
    "build": {
      "$ref": "#/definitions/build"
    },
    "error": {
      "$ref": "#/definitions/error"
    }
  },
  "description": "Conveyor API",
  "id": "conveyor",
  "links": [
    {
      "href": "http://localhost:8080",
      "rel": "self"
    }
  ],
  "title": "Conveyor"
}