{
  "$schema": "http://json-schema.org/schema#",
  "id": "https://digitallinguistics.github.io/spec/textPl.json",
  "title": "Text",
  "description": "The <dfn>text</dfn> is the fundamental unit of documentation. It represents a linguistic performance of a stretch of discourse in context. This may include a wide variety of linguistic genres: an elicitation session, a conversation, a narrative, a song, etc. The DLX <code>Text</code> object consists minimally of a <code>'title'</code> and <code>'phrases'</code> array.",
  "type": "object",
  "required": [
    "phrases",
    "titles"
  ],
  "additionalProperties": true,
  "definitions": {
    "tag": {
      "title": "Tag",
      "description": "A <dfn>tag</dfn> is a piece of metadata that can be applied to any linguistic object, in order to associate related objects together. Each DLX <code>Tag</code> object consists of a <code>'category'</code> and an optional <code>'value'</code> or subcategory. Both <code>'category'</code> and <code>'value'</code> must be strings/text (numbers will be converted into strings/text).",
      "type": "object",
      "required": [
        "category"
      ],
      "additionalProperties": false,
      "properties": {
        "category": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    }
  },
  "oneOf": [
    {
      "properties": {
        "participants": {
          "type": "array",
          "not": {
            "items": {
              "not": {
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "speaker"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "properties": {
        "phrases": {
          "allOf": [
            {
              "$ref": "#/properties/phrases"
            },
            {
              "items": {
                "required": [
                  "speaker"
                ]
              }
            }
          ]
        }
      }
    }
  ],
  "properties": {
    "abbreviation": {
      "type": "string",
      "pattern": "^[(a-z)|(A-Z)|(0-9)]+$",
      "description": "a human-readable abbreviation for this text, containing only letters a-z, A-Z, and numbers 0-9 (no spaces allowed)"
    },
    "dateCreated": {
      "type": "string",
      "description": "the date (and optionally time) that this <code>Text</code> object or file was created, in internet date-time format (NOT the date the text was recorded; for that, see the </code>'dateRecorded'</code> property): http://tools.ietf.org/html/rfc3339"
    },
    "dateModified": {
      "type": "string",
      "description": "the date (and optionally time) that this <code>Text</code> object or file was modified, in internet date-time format: http://tools.ietf.org/html/rfc3339"
    },
    "dateRecorded": {
      "type": "string",
      "description": "the date (and optionally time) that this text was recorded, in internet date-time format: http://tools.ietf.org/html/rfc3339"
    },
    "discourseType": {
      "type": "string",
      "description": "the type of discourse event, e.g. monologue, dialogue, or song"
    },
    "genre": {
      "type": "string",
      "description": "the genre of the text, e.g. folktale, personal narrative, or expository"
    },
    "location": {
      "type": "string",
      "description": "a text description of the locale, neighborhood, city, region, locality, and/or country"
    },
    "note": {
      "type": "string"
    },
    "tags": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/tag"
      }
    },
    "access": {
      "title": "Access Rights",
      "description": "The <code>'Access Rights'</code> object stores information regarding who has permission to access this particular text. Users may choose to follow the access protocol of their archive of choice, or their own custom access protocol.",
      "type": "object",
      "required": [
        "accessLevel",
        "protocol"
      ],
      "oneOf": [
        {
          "properties": {
            "protocol": {
              "enum": [
                "custom"
              ]
            }
          }
        },
        {
          "properties": {
            "accessLevel": {
              "enum": [
                "U",
                "R",
                "C",
                "S"
              ]
            },
            "protocol": {
              "enum": [
                "ELAR"
              ]
            }
          }
        }
      ],
      "properties": {
        "accessLevel": {
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "any additional notes concerning access to this text"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "custom",
            "ELAR"
          ]
        }
      }
    },
    "coordinates": {
      "title": "GeoJSON Coordinates",
      "description": "a pair of geographic coordinates where this text was recorded, following the GeoJSON specification for recording coordinates in an array: http://geojson.org/geojson-spec.html#positions",
      "type": "array",
      "oneOf": [
        {
          "minItems": 2,
          "maxItems": 2
        },
        {
          "maxItems": 0
        }
      ],
      "items": {
        "type": "number",
        "maximum": 360,
        "minimum": -360
      }
    },
    "mediaFiles": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "title": "Media File",
        "description": "A <dfn>media file</dfn> is any audiovisual file associated with this text, including audio or video recordings, but also scans of notebook pages where the text was recorded, relevant pictures taken during recording, etc.",
        "type": "object",
        "required": [
          "docType",
          "fileType",
          "url"
        ],
        "additionalProperties": true,
        "properties": {
          "docType": {
            "type": "string",
            "description": "the type of documentation this file is, e.g. video recording, notebook scan, etc."
          },
          "endTime": {
            "type": "string",
            "pattern": "^[0-9]{1,2}.[0-9]+$"
          },
          "fileType": {
            "type": "string",
            "description": "a valid internet media type"
          },
          "length": {
            "type": "string",
            "description": "a valid internet media type"
          },
          "note": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "pattern": "^[0-9]{1,2}.[0-9]+$"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "tags": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/tag"
            }
          }
        }
      }
    },
    "participants": {
      "type": "array",
      "items": {
        "title": "Participant",
        "description": "A <dfn>participant</dfn> is anyone who contributed to the creation or analysis of the text, and the role they played (e.g. recording, transcribing, speaking, etc.). A <code>Participant</code> is not just a <code>Person</code> object (see the DLX <a href='../spec/person'>Person</a> specification for that), but rather it is an object which specifies the particular role a person played in producing this text. It is a pairing of person and role. The <code>'person'</code> field references a <code>Person</code> object. This may be either a valid <code>Person</code> object, following the <a href=../spec/person'>Person</a> specification, or the ID of a <code>Person</code> object in another file accompanying the text.",
        "type": "object",
        "required": [
          "name",
          "role"
        ],
        "properties": {
          "abbreviation": {
            "type": "string",
            "description": "The participant <dfn>abbreviation</dfn> is a human-readable key for referring to this person, usually but not always consisting of the person\u2019s initials. Other schemas might be <code>'A'</code> and <code>'B'</code> respectively for speakers A and B, for example. The participant abbreviation may contain only letters a-z, A-Z, and numbers 0-9 (no spaces allowed)."
          },
          "name": {
            "type": "string",
            "description": "The name of this participant. If a pseudonym is used for this participant, that pseudonym should be used here instead of the participant\u2019s real name."
          },
          "person": {
            "$ref": "person.json",
            "description": "The <code>'person'</code> field references a <code>Person</code> object. This may be either a valid <code>Person</code> object, following the <a href='../spec/person'>Person</a> specification, or the ID of a <code>Person</code> object in another file accompanying the text."
          },
          "role": {
            "type": "string",
            "description": "The role that this person played in the creation or curation of this text, e.g. speaker, translator, transcriber, rehearer, editor, checker, glosser, researcher, etc."
          }
        }
      }
    },
    "titles": {
      "title": "Titles",
      "description": "A <dfn>title</dfn> is a human-readable prose description of the content of the text. A title may have several translations or orthographic repersentations, so the <code>Title</code> object contains each of the different representations of the title of this text. For each title, the attribute (key, field name) is the name of the orthography the title is written in (e.g. English, MixtecPhonemic), while the value is the title itself. Each text must have at least 1 title within the <code>Titles</code> object.",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^[(a-z)|(A-Z)|(0-9)]+$": {
          "type": "string",
          "title": "Transcript"
        }
      },
      "additionalProperties": false
    },
    "phrases": {
      "type": "array",
      "items": {
        "title": "Phrase",
        "description": "A <dfn>phrase</dfn> is a segmentation of a text above the word level. The DLX specification imposes no requirements regarding how linguists should implement this segmentation \u2014 a linguist may choose to segement the text based on intonation units, turns, sentences, or any other appropriate subdivision. A <code>Phrase</code> consists minimally of a <code>Transcription</code>, a <code>Translation</code>, and an array of <code>Words</code> (though the words array may be empty). If the <code>'participants'</code> array in the <code>Text</code> contains a single <code>Participant</code> with the <code>'role'</code> of <code>'speaker'</code>, that speaker is assumed to be the speaker for every phrase in the <code>Text</code>. If no speaker is specified for the <code>Text</code>, or if there is more than one <code>Participant</code> in the text with the <code>'role'</code> of <code>'speaker'</code>, each <code>Phrase</code> must have its speaker specified in the <code>'speaker'</code> property.",
        "type": "object",
        "required": [
          "transcriptions",
          "translations",
          "words"
        ],
        "additionalProperties": true,
        "properties": {
          "endTime": {
            "type": "string",
            "pattern": "^[0-9]{1,2}.[0-9]+$"
          },
          "note": {
            "type": "string"
          },
          "speaker": {
            "$ref": "person.json"
          },
          "startTime": {
            "type": "string",
            "pattern": "^[0-9]{1,2}.[0-9]+$"
          },
          "tags": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/tag"
            }
          },
          "transcripts": {
            "title": "Transcripts",
            "description": "A <dfn>transcript</dfn> is a representation of the phrase that has been annotated for discourse-level features such as prosody, pauses, turn-taking, etc. The DLX <code>Transcripts</code> object contains any transcripts of this particular phrase, where the attribute (field name or key) is the transcription system being used (e.g. Discourse Transcription (DT) or Conversation Analysis (CA)), and the value for that field is the annotated transcript. There must be at least 1 transcript specified if the <code>Transcripts</code> object is present.",
            "type": "object",
            "minProperties": 1,
            "patternProperties": {
              "^[(a-z)|(A-Z)|(0-9)]+$": {
                "type": "string",
                "title": "Transcript"
              }
            },
            "additionalProperties": false
          },
          "transcriptions": {
            "title": "Transcriptions",
            "description": "A <dfn>transcription</dfn> is a phonemic representation of the phrase in an orthography which is either in IPA or can be unambiguously mapped to IPA>. The DLX <code>Transcriptions</code> object contains any transcriptions for this particular phrase, where the attribute (field name or key) is the transcription system being used (e.g. practicalPhonemic, APAPhonetic), and the value for that field is the transcription. There must be at least one transcription specified for every phrase.",
            "type": "object",
            "minProperties": 1,
            "patternProperties": {
              "^[(a-z)|(A-Z)|(0-9)]+$": {
                "type": "string",
                "title": "Transcription"
              }
            },
            "additionalProperties": false
          },
          "translations": {
            "title": "Translations",
            "description": "The <code>Translations</code> object provides the set of translations for this phrase. There may be multiple translations per phrase, in different languages or styles (e.g. literal vs. free translations, English vs. Swahili translations, etc.). The <code>Translations</code> object is required, but may be an empty object.",
            "type": "object",
            "minProperties": 1,
            "patternProperties": {
              "^[(a-z)|(A-Z)|(0-9)]+$": {
                "type": "string",
                "title": "Translation"
              }
            },
            "additionalProperties": false
          },
          "words": {
            "type": "array",
            "items": {
              "title": "Word",
              "description": "A <dfn>word</dfn> is typically defined as the smallest freestanding unit in a language, although this unit varies depending on whether one uses phonological or syntactic criteria. A linguistic word conists of one or more morphemes. A DLX <code>Word</code> object consists minimally of a <code>'token'</code> string and an array of <code>'morphemes'</code> (even if the array is empty).",
              "type": "object",
              "required": [
                "morphemes",
                "token"
              ],
              "additionalProperties": true,
              "properties": {
                "note": {
                  "type": "string"
                },
                "glosses": {
                  "title": "Word Glosses",
                  "description": "A <dfn>word gloss</dfn> is a brief annotation of a word, morpheme, or other linguistic structure in a text. The <code>Word Glosses</code> object contains all the word-level glosses for a given word (glosses for individual morphemes within the word are provided in the <code>Morpheme</code> object; word glosses only gloss the word as a whole). The attribute (key, field name) for each gloss is the type of gloss, e.g. 'pedagogical' or 'Leipzig', while the value for the gloss is the gloss itself, e.g. '<span style='font-variant: small-caps;'>DET</span>' or 'he.eats'.",
                  "type": "object",
                  "patternProperties": {
                    "^[(a-z)|(A-Z)|(0-9)]+$": {
                      "type": "string",
                      "title": "Gloss"
                    }
                  },
                  "additionalProperties": false
                },
                "token": {
                  "title": "Word Token",
                  "description": "A <dfn>word token</dfn> is an individual instance of a word in context (as opposed to an abstract <dfn>word type</dfn> or <dfn>wordform</dfn>). Like phrases, each word token can be transcribed using different orthographies or conventions. The <code>Token</code> object holds all of those transcriptions of the individual token. The <code>Token</code> object is required, and must contain at least 1 representation of the token.",
                  "type": "object",
                  "minProperties": 1,
                  "patternProperties": {
                    "^[(a-z)|(A-Z)|(0-9)]+$": {
                      "type": "string",
                      "title": "Representation"
                    }
                  },
                  "additionalProperties": false
                },
                "tags": {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "$ref": "#/definitions/tag"
                  }
                },
                "morphemes": {
                  "type": "array",
                  "uniqueItems": false,
                  "items": {
                    "title": "Morpheme",
                    "description": "A <dfn>morpheme</dfn> is generally defined as the smallest grammatical unit, or unit of meaning, in a language. Each <code>Morpheme</code> object within a <code>Text</code> represents a linguistic token of that morpheme, rather than a type. A <code>Morpheme</code> consists minimally of <code>'token'</code> and <code>'gloss'</code> strings.",
                    "type": "object",
                    "required": [
                      "token",
                      "glosses"
                    ],
                    "additionalProperties": true,
                    "properties": {
                      "note": {
                        "type": "string"
                      },
                      "token": {
                        "title": "Morpheme Token",
                        "description": "A <dfn>morpheme token</dfn> is a specific instance of a morpheme in context (as opposed to an abstract <dfn>morpheme type</dfn> that you might find in a dictionary). The <code>Morphme Token</code> object contains all the representations/transcriptions of a particular morpheme token. The <code>Morpheme Token</code> object is required, and must have at least 1 representation of the token in it.",
                        "type": "object",
                        "minProperties": 1,
                        "patternProperties": {
                          "^[(a-z)|(A-Z)|(0-9)]+$": {
                            "type": "string",
                            "title": "Representation"
                          }
                        },
                        "additionalProperties": false
                      },
                      "glosses": {
                        "title": "Morpheme Glosses",
                        "description": "A <dfn>morpheme gloss</dfn> is a brief annotation of the meaning of a morpheme. The <code>Morpheme Glosses</code> object contains all the glosses for a given morpheme. The attribute (key, field name) for each gloss is the type of gloss, e.g. 'pedagogical' or 'Leipzig', while the value for the gloss is the gloss itself, e.g. '<span style='font-variant: small-caps;'>DET</span>' or 'hand' or '<span style='font-variant: small-caps;'>CAUS</span>'. Each <code>Morpheme</code> requires a gloss, even if the field is an empty string.",
                        "type": "object",
                        "minProperties": 1,
                        "patternProperties": {
                          "^[(a-z)|(A-Z)|(0-9)]+$": {
                            "type": "string",
                            "title": "Gloss"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tags": {
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "$ref": "#/definitions/tag"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}