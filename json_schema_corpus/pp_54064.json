{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/DatedMoneySpecification",
  "required": [],
  "title": "DatedMoneySpecification",
  "name": "DatedMoneySpecification",
  "description": "A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time.",
  "type": "object",
  "properties": {
    "amount": {
      "id": "http://schema.org/amount",
      "title": "amount",
      "description": "The amount of money.",
      "type": "number"
    },
    "currency": {
      "id": "http://schema.org/currency",
      "title": "currency",
      "description": "The currency in which the monetary amount is expressed (in 3-letter ISO 4217 format).",
      "type": "string"
    },
    "endDate": {
      "id": "http://schema.org/endDate",
      "title": "endDate",
      "description": "The end date and time of the item (in ISO 8601 date format).",
      "type": "object",
      "properties": {
        "endDate": {
          "$ref": "Date.json#/properties"
        }
      }
    },
    "startDate": {
      "id": "http://schema.org/startDate",
      "title": "startDate",
      "description": "The start date and time of the item (in ISO 8601 date format).",
      "type": "object",
      "properties": {
        "startDate": {
          "$ref": "Date.json#/properties"
        }
      }
    },
    "": {
      "title": "",
      "description": "",
      "type": null
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string",
      "format": "uri"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "string",
      "format": "uri"
    },
    "name": {
      "id": "http://schema.org/name",
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string",
      "format": "uri"
    },
    "url": {
      "id": "http://schema.org/url",
      "title": "url",
      "description": "URL of the item.",
      "type": "string",
      "format": "uri"
    }
  }
}