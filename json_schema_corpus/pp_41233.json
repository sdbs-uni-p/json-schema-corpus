{
  "gear": {
    "name": "extract-cmrr-physio",
    "label": "CMRR: Extract CMRR Physio",
    "description": "Extract physiological log files from encoded '_PHYSIO' DICOM file generated by CMRR MB sequences (>=R015, >=VD13A), Generate BIDs compliant files if desired",
    "maintainer": "Flywheel <support@flywheel.io>",
    "author": "E. Auerbach, CMRR, 2016",
    "url": "https://github.com/CMRR-C2P/MB",
    "source": "https://github.com/flywheel-apps/extract-cmrr-physio/releases",
    "license": "MIT",
    "flywheel": "0",
    "version": "1.2.3",
    "custom": {
      "docker-image": "flywheel/extract-cmrr-physio:1.2.3",
      "gear-builder": {
        "category": "converter",
        "image": "flywheel/extract-cmrr-physio:1.2.3"
      }
    },
    "inputs": {
      "DICOM_ARCHIVE": {
        "description": "Zipped archive containing CMRR Physio data",
        "base": "file",
        "type": {
          "enum": [
            "dicom",
            "archive"
          ]
        }
      }
    },
    "config": {
      "Generate_Bids": {
        "description": "Generate BIDS compatible physio files",
        "type": "boolean",
        "default": true
      },
      "Generate_json": {
        "description": "Generate the BIDS '.json' file for viewing",
        "type": "boolean",
        "default": false
      },
      "Generate_Raw": {
        "description": "Keep the raw '.log' files created by the matlab dicom to physio program",
        "type": "boolean",
        "default": true
      },
      "Generate_QA": {
        "description": "Generate QA plots of the physio measures for visual inspection",
        "type": "boolean",
        "default": true
      },
      "Process_Data": {
        "description": "Check to perform processing on the physio data, or leave unchecked to push raw data to BIDS format",
        "type": "boolean",
        "default": true
      },
      "Missing_Data": {
        "description": "How to handle missing data in the physio recordings",
        "type": "string",
        "enum": [
          "gap_fill",
          "uniform",
          "upsample",
          "none"
        ],
        "default": "gap_fill"
      },
      "Interpolation_Method": {
        "description": "Method to use for signal interpolation",
        "type": "string",
        "enum": [
          "fill",
          "linear",
          "nearest",
          "zero",
          "slinear",
          "quadratic",
          "cubic",
          "nan"
        ],
        "default": "nan"
      },
      "Fill_Value": {
        "description": "The value to fill missing data with if Interpolation_Methods is 'Fill'",
        "type": "number",
        "default": 0
      },
      "gear-log-level": {
        "default": "INFO",
        "description": "Gear Log verbosity level (ERROR|WARNING|INFO|DEBUG)",
        "type": "string",
        "enum": [
          "ERROR",
          "WARNING",
          "INFO",
          "DEBUG"
        ]
      },
      "Dry-Run": {
        "type": "boolean",
        "default": false,
        "description": "Log all commands, but do not execute."
      }
    },
    "command": "python /flywheel/v0/run.py"
  },
  "exchange": {
    "git-commit": "04bc8de95576af1c73c883db17fac71d691c84cb",
    "rootfs-hash": "sha384:1d1431336abfba44726d93b2fccba440a0ab6c333edbf518bad35c9c5c31efb638a69df7223d58a4c78879176f53c74f",
    "rootfs-url": "https://storage.googleapis.com/flywheel-exchange/flywheel-extract-cmrr-physio-sha384-1d1431336abfba44726d93b2fccba440a0ab6c333edbf518bad35c9c5c31efb638a69df7223d58a4c78879176f53c74f.tgz"
  },
  "invocation-schema": {
    "title": "Invocation manifest for CMRR: Extract CMRR Physio",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "config": {
        "type": "object",
        "properties": {
          "Generate_Bids": {
            "type": "boolean",
            "default": true
          },
          "Generate_json": {
            "type": "boolean",
            "default": false
          },
          "Generate_Raw": {
            "type": "boolean",
            "default": true
          },
          "Generate_QA": {
            "type": "boolean",
            "default": true
          },
          "Process_Data": {
            "type": "boolean",
            "default": true
          },
          "Missing_Data": {
            "type": "string",
            "enum": [
              "gap_fill",
              "uniform",
              "upsample",
              "none"
            ],
            "default": "gap_fill"
          },
          "Interpolation_Method": {
            "type": "string",
            "enum": [
              "fill",
              "linear",
              "nearest",
              "zero",
              "slinear",
              "quadratic",
              "cubic",
              "nan"
            ],
            "default": "nan"
          },
          "Fill_Value": {
            "type": "number",
            "default": 0
          },
          "gear-log-level": {
            "default": "INFO",
            "type": "string",
            "enum": [
              "ERROR",
              "WARNING",
              "INFO",
              "DEBUG"
            ]
          },
          "Dry-Run": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "Generate_Bids",
          "Generate_json",
          "Generate_Raw",
          "Generate_QA",
          "Process_Data",
          "Missing_Data",
          "Interpolation_Method",
          "Fill_Value",
          "gear-log-level",
          "Dry-Run"
        ]
      },
      "inputs": {
        "type": "object",
        "properties": {
          "DICOM_ARCHIVE": {
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "dicom",
                  "archive"
                ]
              }
            }
          }
        },
        "required": [
          "DICOM_ARCHIVE"
        ]
      }
    },
    "required": [
      "config",
      "inputs"
    ]
  }
}