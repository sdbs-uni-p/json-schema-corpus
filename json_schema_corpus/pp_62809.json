{
  "$schema": "http://json-schema.org/draft-04/schema",
  "id": "urn:x-jubatus:api:recommender",
  "definitions": {
    "id_with_score": {
      "title": "id_with_score",
      "description": "Represents ID with its score.",
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": [
        {
          "title": "id",
          "description": "Data ID.",
          "type": "string"
        },
        {
          "title": "score",
          "description": "Score. Range of scores is 0 <= score <= 1 (less than or equal to -0 when using euclid_lsh).",
          "type": "number"
        }
      ],
      "additionalItems": false
    }
  },
  "title": "recommender",
  "properties": {
    "clear_row": {
      "title": "clear_row",
      "description": "Removes the given row id from the recommendation table.",
      "properties": {
        "return": {
          "description": "True when the row was cleared successfully",
          "type": "boolean"
        },
        "arguments": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": [
            {
              "title": "id",
              "description": "row ID to be removed",
              "type": "string"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "update_row": {
      "title": "update_row",
      "description": "Updates the row whose id is id with given row. If the row with the same id already exists, the row is differential updated with row. Otherwise, new row entry will be created. If the server that manages the row and the server that received this RPC request are same, this operation is reflected instantly. If not, update operation is reflected after mix.",
      "properties": {
        "return": {
          "description": "True if this function updates models successfully",
          "type": "boolean"
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "id",
              "description": "row ID",
              "type": "string"
            },
            {
              "title": "row",
              "description": "datum for the row",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "complete_row_from_id": {
      "title": "complete_row_from_id",
      "description": "Returns the datum for the row id, with missing value completed by predicted value.",
      "properties": {
        "return": {
          "description": "datum stored in id row with missing value completed by predicted value",
          "$ref": "urn:x-jubatus:api:common#/definitions/datum"
        },
        "arguments": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": [
            {
              "title": "id",
              "description": "row ID",
              "type": "string"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "complete_row_from_datum": {
      "title": "complete_row_from_datum",
      "description": "Returns the datum constructed from row, with missing value completed by predicted value.",
      "properties": {
        "return": {
          "description": "datum constructed from the given datum with missing value completed by predicted value",
          "$ref": "urn:x-jubatus:api:common#/definitions/datum"
        },
        "arguments": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": [
            {
              "title": "row",
              "description": "original datum to be completed (possibly some values are missing)",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "similar_row_from_id": {
      "title": "similar_row_from_id",
      "description": "Returns size rows (at maximum) which are most similar to the row id.",
      "properties": {
        "return": {
          "description": "row IDs that are most similar to the row id",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id_with_score"
          }
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "id",
              "description": "row ID",
              "type": "string"
            },
            {
              "title": "size",
              "description": "number of rows to be returned",
              "type": "integer"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "similar_row_from_id_and_score": {
      "title": "similar_row_from_id_and_score",
      "description": "Returns rows which are most similar to the row id and have a greater similarity score than score.",
      "properties": {
        "return": {
          "description": "row IDs that are most similar to the row id",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id_with_score"
          }
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "id",
              "description": "row ID",
              "type": "string"
            },
            {
              "title": "score",
              "description": "threshold of similarity score",
              "type": "number"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "similar_row_from_id_and_rate": {
      "title": "similar_row_from_id_and_rate",
      "description": "Returns the top rate of all the rows which are most similar to the row id. For example, return the top 40% of all the rows when 0.4 is specified as rate.",
      "properties": {
        "return": {
          "description": "row IDs that are most similar to the row id",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id_with_score"
          }
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "id",
              "description": "row ID",
              "type": "string"
            },
            {
              "title": "rate",
              "description": "rate of all the rows to be returned (Range 0 < rate <= 1)",
              "type": "number"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "similar_row_from_datum": {
      "title": "similar_row_from_datum",
      "description": "Returns size rows (at maximum) that most have similar datum to row.",
      "properties": {
        "return": {
          "description": "rows that most have a similar datum to row",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id_with_score"
          }
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "row",
              "description": "datum to find similar rows",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            },
            {
              "title": "size",
              "description": "number of rows to be returned",
              "type": "integer"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "similar_row_from_datum_and_score": {
      "title": "similar_row_from_datum_and_score",
      "description": "Returns rows which are most similar to row and have a greater similarity score than score.",
      "properties": {
        "return": {
          "description": "rows that most have a similar datum to row",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id_with_score"
          }
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "row",
              "description": "datum to find similar rows",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            },
            {
              "title": "score",
              "description": "threshold of similarity score",
              "type": "number"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "similar_row_from_datum_and_rate": {
      "title": "similar_row_from_datum_and_rate",
      "description": "Returns the top rate of all the rows which are most similar to row. For example, return the top 40% of all the rows when 0.4 is specified as rate.",
      "properties": {
        "return": {
          "description": "rows that most have a similar datum to row",
          "type": "array",
          "items": {
            "$ref": "#/definitions/id_with_score"
          }
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "row",
              "description": "datum to find similar rows",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            },
            {
              "title": "rate",
              "description": "rate of all the rows to be returned (Range 0 < rate <= 1)",
              "type": "number"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "decode_row": {
      "title": "decode_row",
      "description": "Returns the datum in the row id. Note that irreversibly converted datum (processed by fv_converter) will not be decoded.",
      "properties": {
        "return": {
          "description": "datum for the given row id",
          "$ref": "urn:x-jubatus:api:common#/definitions/datum"
        },
        "arguments": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": [
            {
              "title": "id",
              "description": "row ID",
              "type": "string"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "get_all_rows": {
      "title": "get_all_rows",
      "description": "Returns the list of all row IDs.",
      "properties": {
        "return": {
          "description": "list of all row IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "arguments": {
          "type": "array",
          "minItems": 0,
          "maxItems": 0,
          "additionalItems": false
        }
      }
    },
    "calc_similarity": {
      "title": "calc_similarity",
      "description": "Returns the similarity score (see score member of id_with_score) between two datum.",
      "properties": {
        "return": {
          "description": "similarity between lhs and rhs",
          "type": "number"
        },
        "arguments": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": [
            {
              "title": "lhs",
              "description": "datum",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            },
            {
              "title": "rhs",
              "description": "another datum",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            }
          ],
          "additionalItems": false
        }
      }
    },
    "calc_l2norm": {
      "title": "calc_l2norm",
      "description": "Returns the value of L2 norm for the row.",
      "properties": {
        "return": {
          "description": "L2 norm for the given row",
          "type": "number"
        },
        "arguments": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": [
            {
              "title": "row",
              "description": "datum",
              "$ref": "urn:x-jubatus:api:common#/definitions/datum"
            }
          ],
          "additionalItems": false
        }
      }
    }
  }
}