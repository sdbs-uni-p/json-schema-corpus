{
  "swagger": "2.0",
  "info": {
    "description": "Interra Open Data Catalog APIs. These are all read endpoints since Interra Generate runs without a server. Full CRUD APIs are available with Interra Admin.",
    "version": "0.0.1",
    "title": "Test Site Data Catalog API"
  },
  "paths": {
    "/data.json": {
      "get": {
        "summary": "Project Open Data inspired endpoint",
        "operationId": "dataJson",
        "description": "A list of all of the datasets as fully rendered documents. If using the pod-full schema this will be Project Open Data compliant.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dataset"
              }
            }
          }
        }
      }
    },
    "/schema.json": {
      "get": {
        "summary": "Schema for the catalog",
        "operationId": "schema",
        "description": "A list of all of the schemas for the catalog.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "object",
              "properties": {
                "collections": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "Collections",
                    "description": "A list of strings of the collections in the catalog."
                  }
                },
                "schema": {
                  "type": "object",
                  "title": "Schema",
                  "description": "Schemas for all of the catalog collections"
                },
                "map": {
                  "type": "object",
                  "description": "A mapping of expected keys for collections and the actual value. For example every collection should have an identifier. Map allows implementing a different key for identifier or other required keys.",
                  "title": "Map"
                },
                "uiSchema": {
                  "type": "object",
                  "title": "UISchema",
                  "description": "A UISchema for the forms for each collection. See Mozilla's react-json-schema-form for details."
                }
              }
            }
          }
        }
      }
    },
    "/routes.json": {
      "get": {
        "summary": "A list of routes for the catalog.",
        "description": "This list is used by the front end to determine what routes are rendered as well as the build process for rendering each HTML page.",
        "operationId": "routes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/latest.json": {
      "get": {
        "summary": "A list of datasets in descending date order.",
        "description": "This list is used by the front end to determine what routes are rendered as well as the build process for rendering each HTML page.",
        "operationId": "latest",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "type": "string"
                  },
                  "modified": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/organization.json": {
      "get": {
        "summary": "All results for organization collection",
        "operationId": "organizationCollection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        }
      }
    },
    "/collections/organization/{document}.json": {
      "get": {
        "summary": "All results for organization collection",
        "operationId": "organizationCollectionDoc",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/organization"
              }
            }
          }
        },
        "description": "An individual document in the organization",
        "parameters": [
          {
            "in": "path",
            "name": "document",
            "type": "string",
            "required": true,
            "description": "The identifier for the document."
          }
        ]
      }
    },
    "/collections/tags.json": {
      "get": {
        "summary": "All results for tags collection",
        "operationId": "tagsCollection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tags"
              }
            }
          }
        }
      }
    },
    "/collections/tags/{document}.json": {
      "get": {
        "summary": "All results for tags collection",
        "operationId": "tagsCollectionDoc",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tags"
              }
            }
          }
        },
        "description": "An individual document in the tags",
        "parameters": [
          {
            "in": "path",
            "name": "document",
            "type": "string",
            "required": true,
            "description": "The identifier for the document."
          }
        ]
      }
    },
    "/collections/datasets.json": {
      "get": {
        "summary": "All results for datasets collection",
        "operationId": "datasetsCollection",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/datasets"
              }
            }
          }
        }
      }
    },
    "/collections/datasets/{document}.json": {
      "get": {
        "summary": "All results for datasets collection",
        "operationId": "datasetsCollectionDoc",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "This is a file so will either be 200 or 404",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/datasets"
              }
            }
          }
        },
        "description": "An individual document in the datasets",
        "parameters": [
          {
            "in": "path",
            "name": "document",
            "type": "string",
            "required": true,
            "description": "The identifier for the document."
          }
        ]
      }
    }
  },
  "definitions": {
    "organization": {
      "title": "Organization",
      "description": "A simple organization.",
      "type": "object",
      "required": [
        "name",
        "identifier",
        "created",
        "refreshed"
      ],
      "properties": {
        "name": {
          "type": "string",
          "title": "Title"
        },
        "identifier": {
          "type": "string",
          "title": "Identifier",
          "description": "Unique identifier for organization."
        },
        "description": {
          "type": "string",
          "title": "Description"
        },
        "created": {
          "type": "string",
          "title": "Created",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "refreshed": {
          "type": "string",
          "title": "Last Refresh Date",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }
      }
    },
    "tags": {
      "title": "Tag",
      "description": "A descriptor for associating similar records.",
      "type": "object",
      "required": [
        "title",
        "identifier",
        "modified",
        "created"
      ],
      "properties": {
        "title": {
          "title": "Title",
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "title": "Identifier"
        },
        "modified": {
          "type": "string",
          "title": "Modified",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "icon": {
          "type": "string",
          "title": "icon"
        },
        "created": {
          "type": "string",
          "title": "Created",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }
      }
    },
    "datasets": {
      "title": "Datasets",
      "description": "A simple dataset.",
      "type": "object",
      "required": [
        "title",
        "id",
        "created",
        "modified"
      ],
      "properties": {
        "title": {
          "type": "string",
          "title": "Title"
        },
        "id": {
          "type": "string",
          "title": "Identifier",
          "description": "Unique identifier for dataset."
        },
        "description": {
          "type": "string",
          "title": "Description"
        },
        "org": {
          "type": "object",
          "title": "Organization",
          "description": "A simple organization.",
          "required": [
            "name",
            "identifier",
            "created",
            "refreshed"
          ],
          "properties": {
            "name": {
              "type": "string",
              "title": "Title"
            },
            "identifier": {
              "type": "string",
              "title": "Identifier",
              "description": "Unique identifier for organization."
            },
            "description": {
              "type": "string",
              "title": "Description"
            },
            "created": {
              "type": "string",
              "title": "Created",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
            },
            "refreshed": {
              "type": "string",
              "title": "Last Refresh Date",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
            }
          }
        },
        "tags": {
          "title": "Tags",
          "description": "Tags are tags.",
          "type": "array",
          "items": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "Tag",
            "description": "A descriptor for associating similar records.",
            "type": "object",
            "required": [
              "title",
              "identifier",
              "modified"
            ],
            "properties": {
              "title": {
                "title": "Title",
                "type": "string"
              },
              "identifier": {
                "type": "string",
                "title": "Identifier"
              },
              "modified": {
                "type": "string",
                "title": "Modified",
                "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
              },
              "icon": {
                "type": "string",
                "title": "icon"
              }
            }
          }
        },
        "created": {
          "type": "string",
          "title": "Created",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "modified": {
          "type": "string",
          "title": "Modified",
          "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "resources": {
          "type": "array",
          "title": "Resources",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "title": "Title"
              },
              "uri": {
                "type": "string",
                "title": "URI"
              },
              "type": {
                "type": "string",
                "title": "Type",
                "enum": [
                  "csv",
                  "html",
                  "xls",
                  "pdf"
                ]
              }
            }
          }
        }
      }
    }
  },
  "host": "",
  "basePath": "/api/v1/",
  "schemes": [
    "https",
    "http"
  ]
}