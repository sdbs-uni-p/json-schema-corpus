{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/PaymentChargeSpecification",
  "required": [],
  "title": "PaymentChargeSpecification",
  "name": "PaymentChargeSpecification",
  "description": "The costs of settling the payment using a particular payment method.",
  "type": "object",
  "properties": {
    "appliesToDeliveryMethod": {
      "id": "http://schema.org/appliesToDeliveryMethod",
      "title": "appliesToDeliveryMethod",
      "description": "The delivery method(s) to which the delivery charge or payment charge specification applies.",
      "type": "object",
      "properties": {
        "appliesToDeliveryMethod": {
          "$ref": "DeliveryMethod.json#/properties"
        }
      }
    },
    "appliesToPaymentMethod": {
      "id": "http://schema.org/appliesToPaymentMethod",
      "title": "appliesToPaymentMethod",
      "description": "The payment method(s) to which the payment charge specification applies.",
      "type": "object",
      "properties": {
        "appliesToPaymentMethod": {
          "$ref": "PaymentMethod.json#/properties"
        }
      }
    },
    "": {
      "title": "",
      "description": "",
      "type": null
    },
    "eligibleQuantity": {
      "id": "http://schema.org/eligibleQuantity",
      "title": "eligibleQuantity",
      "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
      "type": "object",
      "properties": {
        "eligibleQuantity": {
          "$ref": "QuantitativeValue.json#/properties"
        }
      }
    },
    "eligibleTransactionVolume": {
      "id": "http://schema.org/eligibleTransactionVolume",
      "title": "eligibleTransactionVolume",
      "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
      "type": "object",
      "properties": {
        "eligibleTransactionVolume": {
          "$ref": "PriceSpecification.json#/properties"
        }
      }
    },
    "maxPrice": {
      "id": "http://schema.org/maxPrice",
      "title": "maxPrice",
      "description": "The highest price if the price is a range.",
      "type": "number"
    },
    "minPrice": {
      "id": "http://schema.org/minPrice",
      "title": "minPrice",
      "description": "The lowest price if the price is a range.",
      "type": "number"
    },
    "price": {
      "id": "http://schema.org/price",
      "title": "price",
      "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\n\n\n      Usage guidelines:\n\n\nUse the priceCurrency property (with ISO 4217 codes e.g. \"USD\") instead of\n      including ambiguous symbols such as '$' in the value.\n\n\n      Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\n\n\n      Note that both RDFa and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values\n      alongside more human-friendly formatting.\n\n\n      Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.\n\n\n\n      ",
      "type": "number"
    },
    "priceCurrency": {
      "id": "http://schema.org/priceCurrency",
      "title": "priceCurrency",
      "description": "The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecification and its subtypes.",
      "type": "string"
    },
    "validFrom": {
      "id": "http://schema.org/validFrom",
      "title": "validFrom",
      "description": "The date when the item becomes valid.",
      "type": "string",
      "format": "date-time"
    },
    "validThrough": {
      "id": "http://schema.org/validThrough",
      "title": "validThrough",
      "description": "The end of the validity of offer, price specification, or opening hours data.",
      "type": "string",
      "format": "date-time"
    },
    "valueAddedTaxIncluded": {
      "id": "http://schema.org/valueAddedTaxIncluded",
      "title": "valueAddedTaxIncluded",
      "description": "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.",
      "type": "boolean"
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string",
      "format": "uri"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "string",
      "format": "uri"
    },
    "name": {
      "id": "http://schema.org/name",
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string",
      "format": "uri"
    },
    "url": {
      "id": "http://schema.org/url",
      "title": "url",
      "description": "URL of the item.",
      "type": "string",
      "format": "uri"
    }
  }
}