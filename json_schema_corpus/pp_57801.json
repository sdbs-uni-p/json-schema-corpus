{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "id": "http://localhost:8081/schema",
  "title": "The virtual wine cellar",
  "type": "object",
  "properties": {
    "BottlePayload": {
      "$ref": "#/definitions/BottlePayload"
    },
    "CreateAccountPayload": {
      "$ref": "#/definitions/CreateAccountPayload"
    },
    "CreateBottlePayload": {
      "$ref": "#/definitions/CreateBottlePayload"
    },
    "RateBottlePayload": {
      "$ref": "#/definitions/RateBottlePayload"
    },
    "UpdateAccountPayload": {
      "$ref": "#/definitions/UpdateAccountPayload"
    },
    "account": {
      "$ref": "#/definitions/account"
    },
    "bottle": {
      "$ref": "#/definitions/bottle"
    },
    "error": {
      "$ref": "#/definitions/error"
    },
    "health": {
      "$ref": "#/definitions/health"
    },
    "js": {
      "$ref": "#/definitions/js"
    },
    "public": {
      "$ref": "#/definitions/public"
    },
    "swagger": {
      "$ref": "#/definitions/swagger"
    }
  },
  "definitions": {
    "BottlePayload": {
      "title": "BottlePayload",
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "example": "sparkling",
          "enum": [
            "red",
            "white",
            "rose",
            "yellow",
            "sparkling"
          ]
        },
        "country": {
          "type": "string",
          "example": "USA",
          "minLength": 2
        },
        "name": {
          "type": "string",
          "example": "Number 8",
          "minLength": 2
        },
        "region": {
          "type": "string",
          "example": "Napa Valley"
        },
        "review": {
          "type": "string",
          "example": "Great and inexpensive",
          "minLength": 3,
          "maxLength": 300
        },
        "sweetness": {
          "type": "integer",
          "example": 4,
          "minimum": 1,
          "maximum": 5
        },
        "varietal": {
          "type": "string",
          "example": "Merlot",
          "minLength": 4
        },
        "vineyard": {
          "type": "string",
          "example": "Asti",
          "minLength": 2
        },
        "vintage": {
          "type": "integer",
          "example": 2012,
          "minimum": 1900,
          "maximum": 2020
        }
      },
      "example": {
        "color": "sparkling",
        "country": "USA",
        "name": "Number 8",
        "region": "Napa Valley",
        "review": "Great and inexpensive",
        "sweetness": 4,
        "varietal": "Merlot",
        "vineyard": "Asti",
        "vintage": 2012
      }
    },
    "CreateAccountPayload": {
      "title": "CreateAccountPayload",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Ratione debitis."
        }
      },
      "example": {
        "name": "Ratione debitis."
      },
      "required": [
        "name"
      ]
    },
    "CreateBottlePayload": {
      "title": "CreateBottlePayload",
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "example": "sparkling",
          "enum": [
            "red",
            "white",
            "rose",
            "yellow",
            "sparkling"
          ]
        },
        "country": {
          "type": "string",
          "example": "USA",
          "minLength": 2
        },
        "name": {
          "type": "string",
          "example": "Number 8",
          "minLength": 2
        },
        "region": {
          "type": "string",
          "example": "Napa Valley"
        },
        "review": {
          "type": "string",
          "example": "Great and inexpensive",
          "minLength": 3,
          "maxLength": 300
        },
        "sweetness": {
          "type": "integer",
          "example": 4,
          "minimum": 1,
          "maximum": 5
        },
        "varietal": {
          "type": "string",
          "example": "Merlot",
          "minLength": 4
        },
        "vineyard": {
          "type": "string",
          "example": "Asti",
          "minLength": 2
        },
        "vintage": {
          "type": "integer",
          "example": 2012,
          "minimum": 1900,
          "maximum": 2020
        }
      },
      "example": {
        "color": "sparkling",
        "country": "USA",
        "name": "Number 8",
        "region": "Napa Valley",
        "review": "Great and inexpensive",
        "sweetness": 4,
        "varietal": "Merlot",
        "vineyard": "Asti",
        "vintage": 2012
      },
      "required": [
        "name",
        "vineyard",
        "varietal",
        "vintage",
        "color"
      ]
    },
    "RateBottlePayload": {
      "title": "RateBottlePayload",
      "type": "object",
      "properties": {
        "rating": {
          "type": "integer",
          "example": 8279792463320557696,
          "format": "int64"
        }
      },
      "example": {
        "rating": 8279792463320557696
      },
      "required": [
        "rating"
      ]
    },
    "UpdateAccountPayload": {
      "title": "UpdateAccountPayload",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sapiente expedita sit laboriosam placeat ducimus doloribus."
        }
      },
      "example": {
        "name": "Sapiente expedita sit laboriosam placeat ducimus doloribus."
      },
      "required": [
        "name"
      ]
    },
    "account": {
      "title": "account",
      "type": "object",
      "links": [
        {
          "title": "create",
          "rel": "create",
          "href": "/cellar/accounts",
          "method": "POST",
          "schema": {
            "description": "create payload",
            "$ref": "#/definitions/CreateAccountPayload"
          },
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "delete",
          "rel": "delete",
          "href": "/cellar/accounts/{accountID}",
          "method": "DELETE",
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "list",
          "rel": "list",
          "href": "/cellar/accounts",
          "method": "GET"
        },
        {
          "title": "show",
          "rel": "self",
          "href": "/cellar/accounts/{accountID}",
          "method": "GET",
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "update",
          "rel": "update",
          "href": "/cellar/accounts/{accountID}",
          "method": "PUT",
          "schema": {
            "description": "update payload",
            "$ref": "#/definitions/UpdateAccountPayload"
          },
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        }
      ]
    },
    "bottle": {
      "title": "bottle",
      "type": "object",
      "links": [
        {
          "title": "create",
          "rel": "create",
          "href": "/cellar/accounts/{accountID}/bottles",
          "method": "POST",
          "schema": {
            "description": "create payload",
            "$ref": "#/definitions/CreateBottlePayload"
          },
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "delete",
          "rel": "delete",
          "href": "/cellar/accounts/{accountID}/bottles/{bottleID}",
          "method": "DELETE",
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "list",
          "rel": "list",
          "href": "/cellar/accounts/{accountID}/bottles",
          "method": "GET",
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "rate",
          "rel": "rate",
          "href": "/cellar/accounts/{accountID}/bottles/{bottleID}/actions/rate",
          "method": "PUT",
          "schema": {
            "description": "rate payload",
            "$ref": "#/definitions/RateBottlePayload"
          },
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "show",
          "rel": "self",
          "href": "/cellar/accounts/{accountID}/bottles/{bottleID}",
          "method": "GET",
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "update",
          "rel": "update",
          "href": "/cellar/accounts/{accountID}/bottles/{bottleID}",
          "method": "PATCH",
          "schema": {
            "description": "update payload",
            "$ref": "#/definitions/BottlePayload"
          },
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        },
        {
          "title": "watch",
          "rel": "watch",
          "href": "/cellar/accounts/{accountID}/bottles/{bottleID}/watch",
          "method": "GET",
          "targetSchema": {
            "$ref": "#/definitions/error"
          },
          "mediaType": "application/vnd.goa.error"
        }
      ]
    },
    "error": {
      "title": "Mediatype identifier: application/vnd.goa.error; view=default",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "an application-specific error code, expressed as a string value.",
          "example": "invalid_value"
        },
        "detail": {
          "type": "string",
          "description": "a human-readable explanation specific to this occurrence of the problem.",
          "example": "Value of ID must be an integer"
        },
        "id": {
          "type": "string",
          "description": "a unique identifier for this particular occurrence of the problem.",
          "example": "3F1FKVRR"
        },
        "meta": {
          "type": "object",
          "description": "a meta object containing non-standard meta-information about the error.",
          "example": {
            "timestamp": 1458609066
          },
          "additionalProperties": true
        },
        "status": {
          "type": "string",
          "description": "the HTTP status code applicable to this problem, expressed as a string value.",
          "example": "400"
        }
      },
      "description": "Error response media type (default view)",
      "example": {
        "code": "invalid_value",
        "detail": "Value of ID must be an integer",
        "id": "3F1FKVRR",
        "meta": {
          "timestamp": 1458609066
        },
        "status": "400"
      },
      "media": {
        "type": "application/vnd.goa.error; view=default"
      }
    },
    "health": {
      "title": "health",
      "type": "object",
      "links": [
        {
          "title": "health",
          "rel": "health",
          "href": "/cellar/_ah/health",
          "method": "GET"
        }
      ]
    },
    "js": {
      "title": "js",
      "type": "object"
    },
    "public": {
      "title": "public",
      "type": "object"
    },
    "swagger": {
      "title": "swagger",
      "type": "object"
    }
  },
  "description": "A basic example of a CRUD API implemented with goa",
  "links": [
    {
      "rel": "self",
      "href": "http://localhost:8081"
    },
    {
      "rel": "self",
      "href": "/schema",
      "method": "GET",
      "targetSchema": {
        "$schema": "http://json-schema.org/draft-04/hyper-schema",
        "additionalProperties": true
      }
    }
  ]
}