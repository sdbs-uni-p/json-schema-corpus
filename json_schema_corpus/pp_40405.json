[
  {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "One service as described by the SMD spec",
    "type": "object",
    "properties": {
      "transport": {
        "description": "The transport used by this service",
        "enum": [
          "POST",
          "GET",
          "REST",
          "JSONP",
          "TCP/IP"
        ],
        "default": "POST"
      },
      "envelope": {
        "description": "The envelope used by this service",
        "enum": [
          "URL",
          "PATH",
          "JSON",
          "JSON-RPC-1.0",
          "JSON-RPC-1.1",
          "JSON-RPC-2.0"
        ],
        "default": "URL"
      },
      "contentType": {
        "description": "Any MIME type",
        "note": "defines a mediaType format",
        "type": "string",
        "format": "mediaType",
        "default": "application/json"
      },
      "jsonpCallbackParameter": {
        "FIXME": "didn't understand much except that it is a parameter",
        "$ref": "#/definitions/serviceParameter"
      },
      "target": {
        "description": "URL used for method call request, resolved within the SMD context",
        "type": "string",
        "format": "uri"
      },
      "additionalParameters": {
        "description": "additional parameters in addition to the defined ones; false means none allowed",
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "$ref": "http://json-schema.org/draft-04/schema#"
          }
        ]
      },
      "parameters": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/serviceParameter"
        }
      },
      "returns": {
        "oneOf": [
          {
            "$ref": "http://json-schema.org/draft-04/schema#"
          },
          {
            "type": "object",
            "required": [
              "type",
              "services"
            ],
            "properties": {
              "type": {
                "$ref": "http://json-schema.org/draft-04/schema#"
              },
              "services": {
                "$ref": "#"
              }
            }
          }
        ]
      },
      "name": {
        "type": "string"
      }
    },
    "definitions": {
      "serviceParameter": {
        "description": "A JSON Schema with a required \"name\" member",
        "allOf": [
          {
            "$ref": "http://json-schema.org/draft-04/schema#"
          },
          {
            "note": "spec specifies \"default\" which is equivalent to JSON Schema's, not reproduced here",
            "properties": {
              "name": {
                "type": "string"
              },
              "optional": {
                "type": "boolean"
              }
            },
            "required": [
              "name"
            ]
          }
        ]
      }
    }
  },
  {
    "description": "This schema has errors",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "transport": {
        "description": "The transport used by this service",
        "enum": [
          "POST",
          "GET",
          "REST",
          "JSONP",
          "TCP/IP"
        ],
        "default": "POST"
      },
      "envelope": {
        "description": "The envelope used by this service",
        "enum": [
          "URL",
          "PATH",
          "JSON",
          "JSON-RPC-1.0",
          "JSON-RPC-1.1",
          "JSON-RPC-2.0"
        ],
        "default": "URL"
      },
      "contentType": {
        "description": "Any MIME type",
        "note": "defines a mediaType format",
        "type": "strin",
        "format": "mediaType",
        "default": "application/json"
      },
      "jsonpCallbackParameter": {
        "FIXME": "didn't understand much except that it is a parameter",
        "$ref": "#/definitions/serviceParameter"
      },
      "target": {
        "description": "URL used for method call request, resolved within the SMD context",
        "type": "string",
        "format": "uri"
      },
      "additionalParameters": {
        "description": "additional parameters in addition to the defined ones; false means none allowed",
        "oneOf": [
          {
            "type": "boolean"
          },
          {
            "$ref": "+http://json-schema.org/draft-04/schema#"
          }
        ]
      },
      "parameters": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/serviceParameter"
        }
      },
      "returns": {
        "oneOf": [
          {
            "$ref": "http://json-schema.org/draft-04/schema#"
          },
          {
            "type": "object",
            "required": [
              "type",
              "services"
            ],
            "properties": {
              "type": {
                "$ref": "http://json-schema.org/draft-04/schema#"
              },
              "services": {
                "$ref": "#"
              }
            }
          }
        ]
      },
      "name": {
        "type": "string"
      }
    },
    "definitions": {
      "serviceParameter": {
        "description": "A JSON Schema with a required \"name\" member",
        "allOf": [
          {
            "$ref": "http://json-schema.org/draft-04/schema#"
          },
          {
            "properties": {
              "name": {
                "type": "string"
              },
              "optional": {
                "type": "boolean"
              }
            },
            "required": "name"
          }
        ]
      }
    }
  },
  {
    "title": "JSON Patch",
    "description": "A JSON Schema describing a JSON Patch",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "notes": [
      "Defines a \"json-pointer\" format attribute",
      "Only required members are accounted for, other members are ignored",
      "FIXME: are zero-length patches allowed?"
    ],
    "type": "array",
    "items": {
      "description": "one JSON Patch operation",
      "allOf": [
        {
          "description": "Members common to all operations",
          "type": "object",
          "required": [
            "op",
            "path"
          ],
          "properties": {
            "path": {
              "type": "string",
              "format": "json-pointer"
            }
          }
        },
        {
          "$ref": "#/definitions/oneOperation"
        }
      ]
    },
    "definitions": {
      "add": {
        "description": "add operation. Value can be any JSON value.",
        "properties": {
          "op": {
            "enum": [
              "add"
            ]
          }
        },
        "required": [
          "value"
        ]
      },
      "remove": {
        "description": "remove operation. Only a path is specified.",
        "properties": {
          "op": {
            "enum": [
              "remove"
            ]
          }
        }
      },
      "replace": {
        "description": "replace operation. Value can be any JSON value.",
        "properties": {
          "op": {
            "enum": [
              "replace"
            ]
          }
        },
        "required": [
          "value"
        ]
      },
      "move": {
        "description": "move operation. \"from\" is a JSON Pointer.",
        "properties": {
          "op": {
            "enum": [
              "move"
            ]
          },
          "from": {
            "type": "string",
            "format": "json-pointer"
          }
        },
        "required": [
          "from"
        ]
      },
      "copy": {
        "description": "copy operation. \"from\" is a JSON Pointer.",
        "properties": {
          "op": {
            "enum": [
              "copy"
            ]
          },
          "from": {
            "type": "string",
            "format": "json-pointer"
          }
        },
        "required": [
          "from"
        ]
      },
      "test": {
        "description": "test operation. Value can be any JSON value.",
        "properties": {
          "op": {
            "enum": [
              "test"
            ]
          }
        },
        "required": [
          "value"
        ]
      },
      "oneOperation": {
        "oneOf": [
          {
            "$ref": "#/definitions/add"
          },
          {
            "$ref": "#/definitions/remove"
          },
          {
            "$ref": "#/definitions/replace"
          },
          {
            "$ref": "#/definitions/move"
          },
          {
            "$ref": "#/definitions/copy"
          },
          {
            "$ref": "#/definitions/test"
          }
        ]
      }
    }
  }
]