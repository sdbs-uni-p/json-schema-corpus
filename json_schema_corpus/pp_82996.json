{
  "id": "http://schemas.triniti.io/json-schema/triniti/ovp/command/update-transcription-status/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_schema": {
      "type": "string",
      "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
      "default": "pbj:triniti:ovp:command:update-transcription-status:1-0-0"
    },
    "command_id": {
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "pbj": {
        "type": "time-uuid",
        "rule": "single"
      }
    },
    "occurred_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "expected_etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$",
      "description": "Used to perform optimistic concurrency control. @link https://en.wikipedia.org/wiki/HTTP_ETag",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "ctx_retries": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 255,
      "description": "The \"ctx_retries\" field is used to keep track of how many attempts were made to process this command. In some cases, the service or transport that handles the command may be down or an optimistic check has failed and is being retried.",
      "pbj": {
        "type": "tiny-int",
        "rule": "single"
      }
    },
    "ctx_causator": {
      "type": "object",
      "description": "The \"ctx_causator\" is the actual causator object that \"ctx_causator_ref\" refers to. In some cases it's useful for command handlers to copy the causator into the command. For example, when a node is being updated we may want to know what the node will be after the update. We can derive this via the causator instead of requesting the node and engaging a race condition.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_causator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_correlator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_user_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "ctx_app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/app"
        }
      ],
      "description": "The \"ctx_app\" refers to the application used to send the command. This is different from ctx_ua (user_agent) because the agent used (Safari, Firefox) is not necessarily the app used (cms, iOS app, website)",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/cloud"
        }
      ],
      "description": "The \"ctx_cloud\" is set by the server receiving the command and is generally only used internally for tracking and performance monitoring.",
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "ctx_ip": {
      "type": "string",
      "format": "ipv4",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv4",
        "overridable": true
      }
    },
    "ctx_ipv6": {
      "type": "string",
      "format": "ipv6",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "ipv6",
        "overridable": true
      }
    },
    "ctx_ua": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535,
      "pbj": {
        "type": "text",
        "rule": "single",
        "overridable": true
      }
    },
    "tags": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      },
      "additionalProperties": false,
      "description": "Tags is a map that categorizes data or tracks references in external systems. The tags names should be consistent and descriptive, e.g. fb_user_id:123, salesforce_customer_id:456.",
      "pbj": {
        "type": "string",
        "rule": "map"
      }
    },
    "node_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the video asset that is being transcribed.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "transcription_status": {
      "type": "string",
      "enum": [
        "unknown",
        "processing",
        "canceled",
        "completed",
        "failed"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "transcribe_job_name": {
      "type": "string",
      "pattern": "^[\\w-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "transcribe_job_region": {
      "type": "string",
      "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
      "minLength": 0,
      "maxLength": 20,
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "slug"
      }
    },
    "language_code": {
      "type": "string",
      "pattern": "^[\\w-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "error_code": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        16,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "pbj": {
        "type": "int-enum",
        "rule": "single"
      }
    },
    "error_message": {
      "type": "string",
      "minLength": 0,
      "maxLength": 65535,
      "pbj": {
        "type": "text",
        "rule": "single"
      }
    }
  },
  "required": [
    "_schema",
    "command_id",
    "node_ref"
  ],
  "definitions": {
    "app": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "http://schemas.triniti.io/json-schema/gdbots/contexts/app/1-0-0.json#"
        }
      ]
    },
    "cloud": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "http://schemas.triniti.io/json-schema/gdbots/contexts/cloud/1-0-0.json#"
        }
      ]
    }
  },
  "additionalProperties": false
}