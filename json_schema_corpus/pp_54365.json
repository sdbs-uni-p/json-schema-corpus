{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/Property",
  "required": [],
  "title": "Property",
  "name": "Property",
  "description": "A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.",
  "type": "object",
  "properties": {
    "domainIncludes": {
      "id": "http://schema.org/domainIncludes",
      "title": "domainIncludes",
      "description": "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
      "type": "object",
      "properties": {
        "domainIncludes": {
          "$ref": "Class.json#/properties"
        }
      }
    },
    "inverseOf": {
      "id": "http://schema.org/inverseOf",
      "title": "inverseOf",
      "description": "Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.",
      "type": "object",
      "properties": {
        "inverseOf": {
          "$ref": "Property.json#/properties"
        }
      }
    },
    "rangeIncludes": {
      "id": "http://schema.org/rangeIncludes",
      "title": "rangeIncludes",
      "description": "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
      "type": "object",
      "properties": {
        "rangeIncludes": {
          "$ref": "Class.json#/properties"
        }
      }
    },
    "supersededBy": {
      "id": "http://schema.org/supersededBy",
      "title": "supersededBy",
      "description": "Relates a property to one that supersedes it.",
      "type": "object",
      "properties": {
        "supersededBy": {
          "$ref": "Property.json#/properties"
        }
      }
    },
    "": {
      "title": "",
      "description": "",
      "type": null
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string",
      "format": "uri"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "string",
      "format": "uri"
    },
    "name": {
      "id": "http://schema.org/name",
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string",
      "format": "uri"
    },
    "url": {
      "id": "http://schema.org/url",
      "title": "url",
      "description": "URL of the item.",
      "type": "string",
      "format": "uri"
    }
  }
}