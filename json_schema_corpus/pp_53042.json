{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "name": "Package",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "name",
    "description"
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "Package name, including 'vendor-name/' prefix."
    },
    "type": {
      "description": "Package type, either 'library' for common packages, 'composer-plugin' for plugins, 'metapackage' for empty packages, or a custom type ([a-z0-9-]+) defined by whatever project this package applies to.",
      "type": "string"
    },
    "target-dir": {
      "description": "DEPRECATED: Forces the package to be installed into the given subdirectory path. This is used for autoloading PSR-0 packages that do not contain their full path. Use forward slashes for cross-platform compatibility.",
      "type": "string"
    },
    "description": {
      "type": "string",
      "description": "Short package description."
    },
    "keywords": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "A tag/keyword that this package relates to."
      }
    },
    "homepage": {
      "type": "string",
      "description": "Homepage URL for the project.",
      "format": "uri"
    },
    "version": {
      "type": "string",
      "description": "Package version, see https://getcomposer.org/doc/04-schema.md#version for more info on valid schemes."
    },
    "time": {
      "type": "string",
      "description": "Package release date, in 'YYYY-MM-DD', 'YYYY-MM-DD HH:MM:SS' or 'YYYY-MM-DDTHH:MM:SSZ' format."
    },
    "license": {
      "type": [
        "string",
        "array"
      ],
      "description": "License name. Or an array of license names."
    },
    "authors": {
      "type": "array",
      "description": "List of authors that contributed to the package. This is typically the main maintainers, not the full list.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Full name of the author."
          },
          "email": {
            "type": "string",
            "description": "Email address of the author.",
            "format": "email"
          },
          "homepage": {
            "type": "string",
            "description": "Homepage URL for the author.",
            "format": "uri"
          },
          "role": {
            "type": "string",
            "description": "Author's role in the project."
          }
        }
      }
    },
    "require": {
      "type": "object",
      "description": "This is a hash of package name (keys) and version constraints (values) that are required to run this package.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "replace": {
      "type": "object",
      "description": "This is a hash of package name (keys) and version constraints (values) that can be replaced by this package.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "conflict": {
      "type": "object",
      "description": "This is a hash of package name (keys) and version constraints (values) that conflict with this package.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "provide": {
      "type": "object",
      "description": "This is a hash of package name (keys) and version constraints (values) that this package provides in addition to this package's name.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "require-dev": {
      "type": "object",
      "description": "This is a hash of package name (keys) and version constraints (values) that this package requires for developing it (testing tools and such).",
      "additionalProperties": {
        "type": "string"
      }
    },
    "suggest": {
      "type": "object",
      "description": "This is a hash of package name (keys) and descriptions (values) that this package suggests work well with it (this will be suggested to the user during installation).",
      "additionalProperties": {
        "type": "string"
      }
    },
    "config": {
      "type": "object",
      "description": "Composer options.",
      "properties": {
        "process-timeout": {
          "type": "integer",
          "description": "The timeout in seconds for process executions, defaults to 300 (5mins)."
        },
        "use-include-path": {
          "type": "boolean",
          "description": "If true, the Composer autoloader will also look for classes in the PHP include path."
        },
        "preferred-install": {
          "type": [
            "string",
            "object"
          ],
          "description": "The install method Composer will prefer to use, defaults to auto and can be any of source, dist, auto, or a hash of {\"pattern\": \"preference\"}."
        },
        "notify-on-install": {
          "type": "boolean",
          "description": "Composer allows repositories to define a notification URL, so that they get notified whenever a package from that repository is installed. This option allows you to disable that behaviour, defaults to true."
        },
        "github-protocols": {
          "type": "array",
          "description": "A list of protocols to use for github.com clones, in priority order, defaults to [\"git\", \"https\", \"http\"].",
          "items": {
            "type": "string"
          }
        },
        "github-oauth": {
          "type": "object",
          "description": "A hash of domain name => github API oauth tokens, typically {\"github.com\":\"<token>\"}.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "gitlab-oauth": {
          "type": "object",
          "description": "A hash of domain name => gitlab API oauth tokens, typically {\"gitlab.com\":\"<token>\"}.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "gitlab-token": {
          "type": "object",
          "description": "A hash of domain name => gitlab private tokens, typically {\"gitlab.com\":\"<token>\"}.",
          "additionalProperties": true
        },
        "disable-tls": {
          "type": "boolean",
          "description": "Defaults to `false`. If set to true all HTTPS URLs will be tried with HTTP instead and no network level encryption is performed. Enabling this is a security risk and is NOT recommended. The better way is to enable the php_openssl extension in php.ini."
        },
        "secure-http": {
          "type": "boolean",
          "description": "Defaults to `true`. If set to true only HTTPS URLs are allowed to be downloaded via Composer. If you really absolutely need HTTP access to something then you can disable it, but using \"Let's Encrypt\" to get a free SSL certificate is generally a better alternative."
        },
        "cafile": {
          "type": "string",
          "description": "A way to set the path to the openssl CA file. In PHP 5.6+ you should rather set this via openssl.cafile in php.ini, although PHP 5.6+ should be able to detect your system CA file automatically."
        },
        "capath": {
          "type": "string",
          "description": "If cafile is not specified or if the certificate is not found there, the directory pointed to by capath is searched for a suitable certificate. capath must be a correctly hashed certificate directory."
        },
        "http-basic": {
          "type": "object",
          "description": "A hash of domain name => {\"username\": \"...\", \"password\": \"...\"}.",
          "additionalProperties": {
            "type": "object",
            "required": [
              "username",
              "password"
            ],
            "properties": {
              "username": {
                "type": "string",
                "description": "The username used for HTTP Basic authentication"
              },
              "password": {
                "type": "string",
                "description": "The password used for HTTP Basic authentication"
              }
            }
          }
        },
        "store-auths": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "What to do after prompting for authentication, one of: true (store), false (do not store) or \"prompt\" (ask every time), defaults to prompt."
        },
        "platform": {
          "type": "object",
          "description": "This is a hash of package name (keys) and version (values) that will be used to mock the platform packages on this machine.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "vendor-dir": {
          "type": "string",
          "description": "The location where all packages are installed, defaults to \"vendor\"."
        },
        "bin-dir": {
          "type": "string",
          "description": "The location where all binaries are linked, defaults to \"vendor/bin\"."
        },
        "data-dir": {
          "type": "string",
          "description": "The location where old phar files are stored, defaults to \"$home\" except on XDG Base Directory compliant unixes."
        },
        "cache-dir": {
          "type": "string",
          "description": "The location where all caches are located, defaults to \"~/.composer/cache\" on *nix and \"%LOCALAPPDATA%\\Composer\" on windows."
        },
        "cache-files-dir": {
          "type": "string",
          "description": "The location where files (zip downloads) are cached, defaults to \"{$cache-dir}/files\"."
        },
        "cache-repo-dir": {
          "type": "string",
          "description": "The location where repo (git/hg repo clones) are cached, defaults to \"{$cache-dir}/repo\"."
        },
        "cache-vcs-dir": {
          "type": "string",
          "description": "The location where vcs infos (git clones, github api calls, etc. when reading vcs repos) are cached, defaults to \"{$cache-dir}/vcs\"."
        },
        "cache-ttl": {
          "type": "integer",
          "description": "The default cache time-to-live, defaults to 15552000 (6 months)."
        },
        "cache-files-ttl": {
          "type": "integer",
          "description": "The cache time-to-live for files, defaults to the value of cache-ttl."
        },
        "cache-files-maxsize": {
          "type": [
            "string",
            "integer"
          ],
          "description": "The cache max size for the files cache, defaults to \"300MiB\"."
        },
        "bin-compat": {
          "enum": [
            "auto",
            "full"
          ],
          "description": "The compatibility of the binaries, defaults to \"auto\" (automatically guessed) and can be \"full\" (compatible with both Windows and Unix-based systems)."
        },
        "discard-changes": {
          "type": [
            "string",
            "boolean"
          ],
          "description": "The default style of handling dirty updates, defaults to false and can be any of true, false or \"stash\"."
        },
        "autoloader-suffix": {
          "type": "string",
          "description": "Optional string to be used as a suffix for the generated Composer autoloader. When null a random one will be generated."
        },
        "optimize-autoloader": {
          "type": "boolean",
          "description": "Always optimize when dumping the autoloader."
        },
        "prepend-autoloader": {
          "type": "boolean",
          "description": "If false, the composer autoloader will not be prepended to existing autoloaders, defaults to true."
        },
        "classmap-authoritative": {
          "type": "boolean",
          "description": "If true, the composer autoloader will not scan the filesystem for classes that are not found in the class map, defaults to false."
        },
        "apcu-autoloader": {
          "type": "boolean",
          "description": "If true, the Composer autoloader will check for APCu and use it to cache found/not-found classes when the extension is enabled, defaults to false."
        },
        "github-domains": {
          "type": "array",
          "description": "A list of domains to use in github mode. This is used for GitHub Enterprise setups, defaults to [\"github.com\"].",
          "items": {
            "type": "string"
          }
        },
        "github-expose-hostname": {
          "type": "boolean",
          "description": "Defaults to true. If set to false, the OAuth tokens created to access the github API will have a date instead of the machine hostname."
        },
        "gitlab-domains": {
          "type": "array",
          "description": "A list of domains to use in gitlab mode. This is used for custom GitLab setups, defaults to [\"gitlab.com\"].",
          "items": {
            "type": "string"
          }
        },
        "archive-format": {
          "type": "string",
          "description": "The default archiving format when not provided on cli, defaults to \"tar\"."
        },
        "archive-dir": {
          "type": "string",
          "description": "The default archive path when not provided on cli, defaults to \".\"."
        }
      }
    },
    "extra": {
      "type": [
        "object",
        "array"
      ],
      "description": "Arbitrary extra data that can be used by plugins, for example, package of type composer-plugin may have a 'class' key defining an installer class name.",
      "additionalProperties": true
    },
    "autoload": {
      "type": "object",
      "description": "Description of how the package can be autoloaded.",
      "properties": {
        "psr-0": {
          "type": "object",
          "description": "This is a hash of namespaces (keys) and the directories they can be found in (values, can be arrays of paths) by the autoloader.",
          "additionalProperties": {
            "type": [
              "string",
              "array"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "psr-4": {
          "type": "object",
          "description": "This is a hash of namespaces (keys) and the PSR-4 directories they can map to (values, can be arrays of paths) by the autoloader.",
          "additionalProperties": {
            "type": [
              "string",
              "array"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "classmap": {
          "type": "array",
          "description": "This is an array of directories that contain classes to be included in the class-map generation process."
        },
        "files": {
          "type": "array",
          "description": "This is an array of files that are always required on every request."
        },
        "exclude-from-classmap": {
          "type": "array",
          "description": "This is an array of patterns to exclude from autoload classmap generation. (e.g. \"exclude-from-classmap\": [\"/test/\", \"/tests/\", \"/Tests/\"]"
        }
      }
    },
    "autoload-dev": {
      "type": "object",
      "description": "Description of additional autoload rules for development purpose (eg. a test suite).",
      "properties": {
        "psr-0": {
          "type": "object",
          "description": "This is a hash of namespaces (keys) and the directories they can be found into (values, can be arrays of paths) by the autoloader.",
          "additionalProperties": {
            "type": [
              "string",
              "array"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "psr-4": {
          "type": "object",
          "description": "This is a hash of namespaces (keys) and the PSR-4 directories they can map to (values, can be arrays of paths) by the autoloader.",
          "additionalProperties": {
            "type": [
              "string",
              "array"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "classmap": {
          "type": "array",
          "description": "This is an array of dir                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       