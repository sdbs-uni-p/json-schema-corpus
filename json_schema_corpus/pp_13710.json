{
  "$schema": "http://json-schema.org/schema#",
  "description": "JSON schema for PVS GUIs",
  "definitions": {
    "pvs.request": {
      "description": "This is an XML-RPC request, not really JSON",
      "type": "object",
      "required": [
        "arg0"
      ],
      "properties": {
        "arg0": {
          "description": "PVS command request",
          "$ref": "#/definitions/pvs-json-request"
        },
        "arg1": {
          "description": "URL of the client (e.g., http://localhost:9090",
          "type": "string",
          "schema": {
            "format": "uri"
          }
        }
      }
    },
    "pvs.response": {
      "description": "The non-error response to a pvs.request. However, note that it may still be a pvs-json-error.",
      "type": "object",
      "required": [
        "mode",
        "context",
        "jsonrpc_result"
      ],
      "properties": {
        "mode": {
          "enum": [
            "lisp",
            "prover",
            "evaluator"
          ]
        },
        "context": {
          "description": "Pathname for the current PVS context.",
          "type": "string"
        },
        "jsonrpc_result": {
          "oneOf": [
            {
              "$ref": "#/definitions/pvs-json-response"
            },
            {
              "$ref": "#/definitions/pvs.error"
            }
          ]
        }
      }
    },
    "pvs.error": {
      "description": "An XML-RPC response in case of an error where id is not available, or when a pvs.response is given.",
      "type": "object",
      "required": [
        "mode",
        "context",
        "xmlrpc-error"
      ],
      "properties": {
        "mode": {
          "enum": [
            "lisp",
            "prover",
            "evaluator"
          ]
        },
        "context": {
          "description": "Pathname for the current PVS context.",
          "type": "string"
        },
        "xmlrpc-error": {
          "type": "string"
        }
      }
    },
    "pvs-json-request": {
      "type": "object",
      "required": [
        "jsonrpc",
        "method"
      ],
      "properties": {
        "jsonrpc": {
          "description": "JSON-RPC version.",
          "enum": [
            "2.0"
          ]
        },
        "id": {
          "description": "A unique ID.",
          "type": "string"
        }
      },
      "oneOf": [
        {
          "$ref": "#/definitions/list-methods-request"
        },
        {
          "$ref": "#/definitions/list-client-methods-request"
        },
        {
          "$ref": "#/definitions/help-request"
        },
        {
          "$ref": "#/definitions/change-context-request"
        },
        {
          "$ref": "#/definitions/typecheck-request"
        },
        {
          "$ref": "#/definitions/prove-formula-request"
        },
        {
          "$ref": "#/definitions/proof-command-request"
        },
        {
          "$ref": "#/definitions/names-info-request"
        },
        {
          "$ref": "#/definitions/lisp-request"
        }
      ]
    },
    "pvs-json-response": {
      "type": "object",
      "required": [
        "jsonrpc",
        "id"
      ],
      "properties": {
        "jsonrpc": {
          "description": "JSON-RPC version.",
          "enum": [
            "2.0"
          ]
        },
        "id": {
          "description": "ID of the pvs-json-request that triggered this pvs-json-response.",
          "type": "string"
        }
      },
      "oneOf": [
        {
          "$ref": "#/definitions/pvs-json-error"
        },
        {
          "$ref": "#/definitions/pvs-json-result"
        }
      ]
    },
    "pvs-json-error": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code",
            "message"
          ],
          "properties": {
            "code": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            },
            "data": {}
          }
        }
      }
    },
    "pvs-json-result": {
      "type": "object",
      "required": [
        "result"
      ],
      "anyOf": [
        {
          "$ref": "#/definitions/list-methods-result"
        },
        {
          "$ref": "#/definitions/list-client-methods-result"
        },
        {
          "$ref": "#/definitions/help-result"
        },
        {
          "$ref": "#/definitions/change-context-result"
        },
        {
          "$ref": "#/definitions/typecheck-result"
        },
        {
          "$ref": "#/definitions/prove-formula-result"
        },
        {
          "$ref": "#/definitions/proof-command-result"
        },
        {
          "$ref": "#/definitions/names-info-result"
        },
        {
          "$ref": "#/definitions/lisp-result"
        }
      ]
    },
    "list-methods-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "list-methods"
          ]
        }
      }
    },
    "list-methods-result": {
      "oneOf": [
        {
          "$ref": "#/definitions/string-array-result"
        }
      ]
    },
    "list-client-methods-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "list-client-methods"
          ]
        }
      }
    },
    "list-client-methods-result": {
      "oneOf": [
        {
          "$ref": "#/definitions/string-array-result"
        }
      ]
    },
    "help-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "help"
          ]
        },
        "params": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "help-result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        }
      }
    },
    "change-context-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "change-context"
          ]
        },
        "params": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "change-context-result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "typecheck-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "typecheck"
          ]
        },
        "params": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typecheck-result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "decls": {
                "type": "array",
                "description": "an array of declarations in the given theory",
                "items": {
                  "type": "object",
                  "oneOf": [
                    {
                      "$ref": "#/definitions/importing"
                    },
                    {
                      "$ref": "#/definitions/typed-decl"
                    },
                    {
                      "$ref": "#/definitions/formula-decl"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "importing": {
      "type": "object",
      "properties": {
        "kind": {
          "enum": [
            "importing"
          ]
        },
        "importing": {
          "type": "string"
        },
        "place": {
          "$ref": "#/definitions/place"
        }
      }
    },
    "typed-decl": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "module",
            "type",
            "expr",
            "datatype",
            "library",
            "judgement",
            "conversion",
            "auto-rewrite"
          ]
        },
        "type": {
          "type": "string"
        },
        "place": {
          "$ref": "#/definitions/place"
        }
      }
    },
    "formula-decl": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "formula"
          ]
        },
        "place": {
          "$ref": "#/definitions/place"
        }
      }
    },
    "prove-formula-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "prove-formula"
          ]
        },
        "params": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "prove-formula-result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        }
      }
    },
    "proof-command-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "proof-command"
          ]
        },
        "params": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "proof-command-result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        }
      }
    },
    "proofstate": {
      "type": "object",
      "required": [
        "current-goal",
        "tree-delta"
      ],
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/proofstate-node"
          }
        },
        "current-goal": {
          "type": "string"
        },
        "tree-delta": {
          "type": "string"
        }
      }
    },
    "proofstate-node": {
      "type": "object",
      "required": [
        "label",
        "sequent"
      ],
      "properties": {
        "commentary": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "type": "string"
        },
        "num-subgoals": {
          "type": "integer"
        },
        "label": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "sequent": {
          "type": "object",
          "properties": {
            "antecedents": {
              "$ref": "#/definitions/s-formulas"
            },
            "succedents": {
              "$ref": "#/definitions/s-formulas"
            },
            "hidden-antecedents": {
              "$ref": "#/definitions/s-formulas"
            },
            "hidden-succedents": {
              "$ref": "#/definitions/s-formulas"
            }
          }
        }
      }
    },
    "s-formulas": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "labels",
          "changed",
          "formula"
        ],
        "properties": {
          "labels": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "changed": {
            "type": "boolean"
          },
          "formula": {
            "type": "string"
          }
        }
      }
    },
    "names-info-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "names-info"
          ]
        },
        "params": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "names-info-result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "place": {
                "$ref": "#/definitions/place"
              },
              "decl": {
                "type": "string"
              },
              "decl-file": {
                "type": "string"
              },
              "decl-place": {
                "$ref": "#/definitions/place"
              }
            }
          }
        }
      }
    },
    "lisp-request": {
      "type": "object",
      "properties": {
        "method": {
          "enum": [
            "lisp"
          ]
        },
        "params": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "params"
      ]
    },
    "lisp-result": {
      "oneOf": [
        {
          "$ref": "#/definitions/string-result"
        }
      ]
    },
    "string-result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "string-array-result": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "place": {
      "type": "array",
      "minItems": 2,
      "maxItems": 4,
      "items": {
        "type": "integer"
      }
    }
  },
  "oneOf": [
    {
      "$ref": "#/definitions/pvs.request"
    },
    {
      "$ref": "#/definitions/pvs.response"
    },
    {
      "$ref": "#/definitions/pvs.error"
    }
  ]
}