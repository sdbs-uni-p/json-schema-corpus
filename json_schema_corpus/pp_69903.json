{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "title": "Build",
  "description": "A build represents a request to build a git commit for a repo.",
  "stability": "prototype",
  "strictProperties": true,
  "type": [
    "object"
  ],
  "definitions": {
    "id": {
      "description": "unique identifier of build",
      "readOnly": true,
      "format": "uuid",
      "type": [
        "string"
      ]
    },
    "repo_sha": {
      "description": "a compact identifier for an artifact the describes the repository and sha together",
      "readOnly": true,
      "example": "remind101/acme-inc@139759bd61e98faeec619c45b1060b4288952164",
      "type": [
        "string"
      ]
    },
    "identity": {
      "anyOf": [
        {
          "$ref": "/schemata/build#/definitions/id"
        },
        {
          "$ref": "/schemata/build#/definitions/repo_sha"
        }
      ]
    },
    "repository": {
      "description": "the GitHub repository that this build is for",
      "example": "remind101/acme-inc",
      "readOnly": true,
      "type": [
        "string"
      ]
    },
    "branch": {
      "description": "the branch within the GitHub repository that the build was triggered from",
      "readOnly": true,
      "example": "master",
      "type": [
        "string"
      ]
    },
    "sha": {
      "description": "the git commit to build",
      "readOnly": true,
      "example": "139759bd61e98faeec619c45b1060b4288952164",
      "type": [
        "string"
      ]
    },
    "state": {
      "description": "the current state of the build",
      "readOnly": true,
      "example": "building",
      "enum": [
        "pending",
        "building",
        "succeeded",
        "failed"
      ],
      "type": [
        "string"
      ]
    },
    "created_at": {
      "description": "when the build was created",
      "readOnly": true,
      "format": "date-time",
      "type": [
        "string"
      ]
    },
    "started_at": {
      "description": "when the build moved to the `\"building\"` state",
      "readOnly": true,
      "format": "date-time",
      "type": [
        "null",
        "string"
      ]
    },
    "completed_at": {
      "description": "when the build moved to the `\"succeeded\"` or `\"failed\"` state",
      "readOnly": true,
      "example": null,
      "format": "date-time",
      "type": [
        "null",
        "string"
      ]
    }
  },
  "links": [
    {
      "description": "Create a new build and start it. Note that you cannot start a new build for a sha that is already in a \"pending\" or \"building\" state. You should cancel the existing build first, or wait for it to complete. You must specify either a `branch` OR a `sha`. If you provide a `branch` but no `sha`, Conveyor will use the GitHub API to resolve the HEAD commit on that branch to a sha. If you provide a `sha` but no `branch`, branch caching will be disabled.",
      "href": "/builds",
      "method": "POST",
      "rel": "create",
      "schema": {
        "properties": {
          "repository": {
            "$ref": "/schemata/build#/definitions/repository"
          },
          "branch": {
            "$ref": "/schemata/build#/definitions/branch"
          },
          "sha": {
            "$ref": "/schemata/build#/definitions/sha"
          }
        },
        "type": [
          "object"
        ],
        "required": [
          "repository"
        ]
      },
      "title": "Create"
    },
    {
      "description": "Info for existing build.",
      "href": "/builds/{(%2Fschemata%2Fbuild%23%2Fdefinitions%2Fidentity)}",
      "method": "GET",
      "rel": "self",
      "title": "Info"
    }
  ],
  "properties": {
    "id": {
      "$ref": "/schemata/build#/definitions/id"
    },
    "repository": {
      "$ref": "/schemata/build#/definitions/repository"
    },
    "branch": {
      "$ref": "/schemata/build#/definitions/branch"
    },
    "sha": {
      "$ref": "/schemata/build#/definitions/sha"
    },
    "state": {
      "$ref": "/schemata/build#/definitions/state"
    },
    "created_at": {
      "$ref": "/schemata/build#/definitions/created_at"
    },
    "started_at": {
      "$ref": "/schemata/build#/definitions/started_at"
    },
    "completed_at": {
      "$ref": "/schemata/build#/definitions/completed_at"
    }
  },
  "id": "schemata/build"
}